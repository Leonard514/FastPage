{
  
    
        "post0": {
            "title": "3.8 3.10 Hacks Blog",
            "content": "Practice Notes: Lesson 8 . 1) What is the counter variable and the condition? . for (var i = 10; i &gt; 0; i--) { println(i); } . The counter variable is i, which according to a web search keeps track of the number of times commands associated with the for loop are executed. This is essentially an index. . The condition that the for loop would keep running is that i &gt; 0 given that as long as this remains true, the for loop will keep executing. Keep in mind that every time the for loop executes, the value of the counter variable decreases by one. . 2) How many timmes will print(ln) be called? . for (var i = 1; i &lt;= 10; i++) { for (var j = 1; j &lt;= 10; j++) { println(i * j); } } .",
            "url": "https://leonard514.github.io/FastPage/sprint/hacks4",
            "relUrl": "/sprint/hacks4",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 3 Sections 5-7 Hacks .ipynb file",
            "content": "For hacks, make a copy of this notebook and answer the questions or complete the code, as described in comments. Additionally, blog about any missed questions, or what you learned from this lesson. . 3.5 Hacks . Binary Practice . Using psuedocode operators determine if the statements are true or false. The number type will be indicated in parentheses. . 1. 90(D) = 1000(B) . 1000 Binary = 0 + 0 + 0 + 8 = 8 Decimal . Answer: B. False . 2. 10(D) ≠ 0110(B) . 0110 Binary = 0 + 2 + 4 + 0 = 6 Decimal ≠ 10 Decimal . Answer: A. True . 3. 56(D) ≥ 111000(B) . 111000 Binary = 0 + 0 + 0 + 8 + 16 + 32 = 56 Decimal ≥ 56 Decimal . Answer: A. True . 3. 99(D) &lt; 1110011(B) . 1110011 Binary = 1 + 2 + 0 + 0 + 16 + 32 + 64 = 115 Decimal . 99 Decimal &lt; 115 Decimal . Decimal: A. True . Now, complete the binary truth tables . AND Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 0 | . 0 | 1 | 0 | . 0 | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 1 | . 0 | 1 | 1 | . 0 | 0 | 0 | . Not operator Not Value Result . Not | 1 | 0 | . Not | 0 | 1 | . . Python Practice . # Practice with these statements print(20 == 20) # How can you change the operator to print a value of False? # Here&#39;s a simple way to change the value to false: print(20 &gt; 20) x = 30 y = 20 z = 10 print(x &gt; y + z) # How can this return true by only manipulating the operator? # The following change makes the statement true: print(x &gt; y - z) # Manipulate the variables x, y, and z to make the below statement return true x = x - z z = y print(x == z) . True False False True True . 3.6 Hacks . AP Prep . 1. What is displayed by this code? . result &lt;-- 75 | IF result &lt; 80 { DISPLAY(&quot;Please schedule a retake.&quot;) } | ELSE { DISPLAY(&quot;Nice job!&quot;) } | . Nice job! | Display | Please schedule a retake. | 75 | Answer: 3. Please Schedule a Retake . Result was set to 75. Since that value is less than 80, the if condition is satisfied. Therefore, its associated command, which prints &quot;Please schedule a retake&quot; to output, is executed. . 2. How is an if statement different from an if-else statement. . Extra words. | An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. | They are the exact same. | An if statement will go through the entire code segment every single time and the if-else statement is always used in an algorithm, no matter the conditions. | If statements and if-else statements are distinct, and their differences are not merely in what words are used. . Both if statements and if-else statements will execute commands if a condition is fulfilled. . In case of the condition not being met, the if statement does nothing, while the if-else statement executes commands associated with the else. . Therefore, the answer is 2. . 3. What would be most appropriate for this situation? Ben wants to check his bank account. If his car fuel is full, he will go to the bank. Otherwise, he will go home. If he goes to the bank, he will withdraw money only if his balance is above $1000. . Note that if the first condition (having a full car) is not fulfilled, a procedure is still executed (namely Ben goes home). Therefore, an if-else statement is procedurally appropriate. . Answer: 2. If-else statement . 4. What would be most appropriate for this situation? Luke wants to play basketball. If it is sunny outside he will go to the park to play basketball. . Note that if the condition (it being sunny outside) is not fulfilled, the procedural response is not specified. This is similar to an if statement, which does nothing if the condition is not met. . Answer: 1. If statement . Using Python . animals = [&quot;lion&quot;, &quot;tiger&quot;, &quot;wildebeest&quot;, &quot;shark&quot;, &quot;jellyfish&quot;, &quot;blobfish&quot;, &quot;raven&quot;] for i in animals: if i == &quot;shark&quot;: # What boolean value does this statement cause? print(&quot;Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand!&quot;) else: print(i) print(&quot;This is information about the habitats of these animals:&quot;) for j in animals: if (j == &quot;lion&quot;) or (j == &quot;raven&quot;): print(&quot;The &quot; + j + &quot; is a desert animal&quot;) else: print(&quot;The &quot; + j + &quot; is not a desert animal&quot;) # Practice # Using only one more if statement, alter the code to print out a statement saying if an animal lives in the desert, based on booleans . lion tiger wildebeest Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand! jellyfish blobfish raven This is information about the habitats of these animals: The lion is a desert animal The tiger is not a desert animal The wildebeest is not a desert animal The shark is not a desert animal The jellyfish is not a desert animal The blobfish is not a desert animal The raven is a desert animal . 3.7 Hacks . Exercise 1 . Create dictionaries for multiple food items, with the listed specifications Chicken Alfredo, Meat: Chicken, Time to Prepare: 60 minutes | Cheese Quesadilla, Meat: None, Time to Prepare: 10 minutes | Beef Wellington, Meat: Beef, Time to Prepare: 150 minutes | . | Used nested conditionals, determine which meal you can cook, given that a) you have no meat at home, and b) you only have 30 minutes to make the meal | . Menu = [ {&quot;Name&quot;: &quot;Chicken Alfredo&quot;, &quot;Meat&quot;: &quot;Chicken&quot;, &quot;PrepTime&quot;: 60}, {&quot;Name&quot;: &quot;Cheese Quesadilla&quot;, &quot;Meat&quot;: &quot;None&quot;, &quot;PrepTime&quot;: 10}, {&quot;Name&quot;: &quot;Beef Wellington&quot;, &quot;Meat&quot;: &quot;Beef&quot;, &quot;PrepTime&quot;: 150}, ] for entry in Menu: if entry[&quot;Meat&quot;] == &quot;None&quot;: if entry[&quot;PrepTime&quot;] &lt; 30: print(&quot;You have sufficient resources to make &quot; + entry[&quot;Name&quot;]) else: print(&quot;You do not have sufficient resources to make &quot; + entry[&quot;Name&quot;]) . You do not have sufficient resources to make Chicken Alfredo You have sufficient resources to make Cheese Quesadilla You do not have sufficient resources to make Beef Wellington . Exercise 2 . Make a flowchart(here is one we used) and write pseudocode for the following scenario. . Mr. Yeung would like to grade live reviews. | He wants to see if each student has at least 2 issues on their project. If they don&#39;t they receive a score of 2.0. | If they have at least 2 issues, check that they have completed at least 5 of their scrumboard tasks. | If they have completed 5 scrumboard tasks, give the student a 2.7. If they have not completed 5 scrumboard tasks, give them a score of 2.5. If they have completed more than 5 tasks, give them a score of 3.0. | How much would a student with 3 issues and 1 complete scrumboard task receive? | . Anyways, my flowchart is on the issue. Apparently my website hates me so I&#39;ll have to paste an image . . Anyways, the student with 3 issues fulfills the first if condition (has at least two issues), so the number of scrum tasks completed is checked. Since 1 is less than the minimum of 5 scrum tasks, this student gets a 2.5. .",
            "url": "https://leonard514.github.io/FastPage/jupyter/3%20week%20sprint/2022/12/05/3.5-3.7hack.html",
            "relUrl": "/jupyter/3%20week%20sprint/2022/12/05/3.5-3.7hack.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "3 weeks sprint grades blog",
            "content": "I’ll start with a highly informative table. . Topics Relevant Files Grade . 3.1-3.2 | Hacks Markdown, Python .ipynb | 1/1 | . 3.3-3.4 | Hacks Markdown | 1/1 | . Now I’ll talk about some key takeaways . Topics 3.1-3.2 . Variable names should be concise yet sufficiently describe the purpose of the variable. For example, the variable name priceApples is descriptive enough to show its purpose: storing the price of apples | There are variable types which can be appropriately applied to different situations | Boolean variables are applied to binary, true and false situations (such as whether someone is hungry) | Integer/float variables are applied to situations involving numbers, especially those that can be altered by mathematical operations (addition, subtraction, etc.) | String variables are appropriate for storage of data (in words) or identification numbers where math is not typically applied. They are enclosed in quotation marks. | Variables can be assigned different ways in different programming languages. Here are some examples: | . CollegeBoard pseudocode . numApples ← 10 . Python . numApples = 10 . It is possible to assign the value of a variable to another variable. If the variable a value is assigned to already has a value, that value is typically overwritten. Here’s an example in pseudocode: | . data1 ← 10 data2 ← 25 data1 ← data2 . In this case, the final value of data1 would be 25 since the value of data2 overwrites that of data1 in the third line. . The last takeaway is that lists can be assigned as variables. These are often put in square brackets ([]) and the entries are separated by commas. The parts of the list are called elements and can exhibit the same data types as variables. | Each element in a list is assigned an index, a nonnegative integer which is associated with the element in future commands. | It is very important to note that different forms of indexing can exist between programming languages. CollegeBoard pseudocode assigns the first element in a list the index 1, while other languages (including Python) assign the first element the index 0. | . Topics 3.3-3.4 . Lines of code in a program are executed in a specific order. This pattern is known as sequencing. | Programs often incorporate selection, where associated lines of code are executed if a condition is satisfied. Often, a different set of commands will be executed if a condition is not satisfied. These most commonly take the form of if statements in python. | Sometimes, programs need to execute lines of code on multiple elements in a list. Instead of writing similar lines of code repetitively, an iteration strategy is used. This often consists of a loop (including for loops, while loops, and recursive functions) which executes associated commands on all items in a list or repeatedly until a certain condition is fulfilled (or is not fulfilled). . | There are various operators which can apply mathematical operations on integer/float variables. | Addition (+), Subtraction (-), multiplication (*), and division (/) are identical to the operations learned in arithmetic. | The modulus operator (seen as a % in Python) performs a division operation but outputs the remainder instead of the quotient. . | There are certain string-related commands in pseudocode that are not on the exam reference sheet. Their validity and syntax quirks are therefore uncertain. | substring(string, n, m) reads a given string (or string variable) and starts at the nth character of that string. It reads m characters from that point. This output can be assigned to a variable. | concat(string1, string2) essentially results in an output of string1string2 (in other words, the strings mashed together without any spaces). This output can be assigned to a variable. | .",
            "url": "https://leonard514.github.io/FastPage/sprint/grades",
            "relUrl": "/sprint/grades",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "3.5-3.7 Hacks Markdown",
            "content": "Section 1: Informal Practice . Topic 3.5 . Here’s some vocab (copy-pasted from site) . Boolean: binary variable with only two possible values, “true” or “false” . 1) What boolean value would result be? . a &lt;-- 19 b &lt;-- 28 result &lt;-- a = b . Answer: 2. False . The values of a and b (19 and 28 respectively) are not equal. Therefore, the statement a = b should return boolean value false. . 2) What boolean value would result be? . score &lt;-- 99 average &lt;-- 99 result &lt;-- score ≤ average . Answer: 1. True . The values of the variables score and average are equivalent and both 99. This satisfies the requirement for the operator less than or equal to and will therefore render the boolean result true. . 3) What boolean value would be displayed? . type &lt;-- &quot;dog&quot; training &lt;-- &quot;yes&quot; DISPLAY((NOT (type = &quot;dog&quot;)) AND (training = &quot;no&quot;)) . To check the boolean result displayed, each statement must be checked. Given that an AND operator is used, both statements must evaluate to true for the result to evaluate as true. . i) This NOT statement returns the opposite result that type = “dog” would usually output. Given that the string “dog” was indeed assigned to type, the usual output is true and the output after the NOT statement is false . Given the AND operator is used, there is no need to check the second statement. The final output will evaluate to false regardless of what the second statement’s result is. . Answer: 2. False . Note: The makers of this question believed that since training = “no” was a false statement, two false statements through an AND operator would yield true. Only two true statements will yield a final output of true. . Topic 3.6 . Here’s some vocab (copy-pasted from site) . Algorithm: Finite set of instructions that accomplish a specific task . Now here’s some questions. . 1) What value will be displayed? . rank &lt;-- &quot;titan&quot; hall &lt;-- 14 IF (rank = &quot;titan&quot;) { DISPLAY(&quot;You like Clash of Clans a lot.&quot;) } . Answer: 1. You like Clash of Clans a lot. . The string “titan” was assigned to the variable rank. The if condition in line 3 checks if the variable rank is equal to the string “titan”. Since it is, the associated command (DISPLAY(“You like Clash of Clans a lot.”)) is executed. The DISPLAY command prints to output the string enclosed in the parenthesis. . 2) What portion of the code will run? . class &lt;-- 33 cookies &lt;-- 25 IF (class &lt; cookies) { DISPLAY(&quot;Give out cookies today.&quot;) } ELSE { DISPLAY(&quot;Do not give out cookies today.&quot;) } . Answer: 2. The ELSE portion . The first two lines assign integers to the variables class and cookies. The IF statement has the condition that the value of class is less than that of cookies. Since the value of cookies is greater than that of class, the commands associated with the ELSE statement (rather than the IF statement) are executed. . Topic 3.7 . Here’s some vocab (copy-pasted from site) . Nested Conditional: A conditional statement inside a conditional statement . Here’s some practice questions . 1) Is this an example of a nested conditional? . space &lt;-- 90 download &lt;-- 20 IF (space &gt; download) { DISPLAY(&quot;File can be downloaded.&quot;) } . Answer: 2. No . There is only one conditional statement command (an IF statement) within this portion of code. The definition of a nested conditional, which has a conditional statement inside a conditional statement, requires at least two conditional statement commands. Therefore, it is impossible for this to be a nested conditional. . 2) What does this code display? . price &lt;-- 200 discount &lt;-- 65 IF (price &gt; 100) { IF (discount &gt; 50) { DISPLAY(&quot;You can buy this item.&quot;) } ELSE { DISPLAY(&quot;You cannot purchase this item.&quot;) } } . Answer: 3. You can buy this item . The variables price and discount are assigned 200 and 65, respectively. . The first if statement checks if the value of price is greater than 100. Since 200 is greater than 100, it executes a nested conditional that checks if discount is greater than 50. Since it is, it executes the associated command to display “You can buy this item.” . Note that for prices of 100 or less, the ELSE statement will be executed since the first conditional statement will not be fulfilled. This is likely a logic error. . Section 2: Hacks . Please see this notebook .",
            "url": "https://leonard514.github.io/FastPage/sprint/hacks3",
            "relUrl": "/sprint/hacks3",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "3.3-3.4 Hacks Blog",
            "content": "3.3 Hacks Part 1 . Label steps of sequence, selection, and iteration for the given examples (at least that’s how I interpreted the question) . Example 1: . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . I’ll outline some lines: . Assigns a list to numbers | Defines evens as an empty list | Uses a for loop to iterate through each element in numbers. Steps 4-5 repeated for each element in the list numbers. | Checks if an element’s value divided by 2 has a remainder of 0 (using modulus) | If the condition passes, this element is appended to evens | print the evens list. | There is sequencing for all lines in this case, since the lines of code are executed in a certain order. . Selection is largely seen in lines 4-5, where elements from numbers are conditionally appended to evens (elements with values that have a remainder of 0 when divided by 2 are appended.) . Iteration is seen in Line 3, where associated lines of code are executed for each element in a list. . Example 2 . i = 1 starString = &quot;*&quot; while i &lt;= 5: j = 1 while j &lt;= i: print (&quot;*&quot;, end= &quot;&quot;) j += 1 print () i += 1 . Here’s line by line explanation . Sets variable i to 1. This is likely an index. | makes a string variable starString with “*” | Will execute all associated lines of code while the index i is less than or equal to 5 | Sets variable j to 1. This is likely an index. j is reset to 1 each time line 3 is re-run | Will execute all associated lines of code while j is less than or equal to i. | Will print a “*”; the end= ““ prevents the print statement from creating a new line | Increases the index j by 1. Keep in mind this change is undone each time line 3 is run. | This print() statement essentially moves to a new line of code | Increases the index i by 1. | Sequencing is seen in all lines of code since they are executed in a certain order . Selection is not largely seen in the code . Iteration is seen in Line 3 (which will execute all associated lines below until i is greater than 5) and in Line 5 (which executes associated lines 6-7 until j is greater than i) . 3.3 Hacks Part 2 . 1) Given the code segment, give the values of a, b, c, and d . a ⟵ 7 b ⟵ 1 c ⟵ 3 d ⟵ 4 a ⟵ b b ⟵ c + d d ⟵ b . I’ll make a table of changes for each line | Line | Change | |-|-| | 1 | a is 7 | | 2 | b is 1 | | 3 | c is 3 | | 4 | d is 4 | | 5 | a is b (1) | | 6 | b is sum of c and d (7) | | 7 | d is b (7) | . a ⟵ 1 b ⟵ 7 c ⟵ 3 d ⟵ 7 . 2) Given the code segment: What are the values of hot and cold? . hot ⟵ true cold ⟵ false cold ⟵ hot hot ⟵ cold . After true was assigned to hot and false was assigned to cold, hot8 (true) was assigned to cold, making both true. Assigning cold to hot (true to true) has no effect, so both are true (Answer is 1) . 3) Make two code segments with at least 5 variable definitions. Provide the answer and explain reasoning . I think these are supposed to be sequencing challenges. OK here goes. For reference I’m doing these in Python. . var1 = 987 var2 = 121 var3 = 1337 var2 = var3 - 1211 var1 = var2 % 7 varsum = var1 + var2 + var3 print(varsum) . The first three lines are rather self explanatory. I assigned these variables some values. . Line 4 is simple enough. The new value of var2 is the value of var3 minus 1211, which is 1337 - 1211 = 126. I used a calculator to avoid arithmetic errors. . Line 5 involves taking the remainder of 126 divided by 7, since this is a modulus function. Oddly enough, 126/7 is exactly 18, so the value of 0 is assigned to var1. . Line 6 involves adding all the variables (taking into account their new values). This is as simple as 0 + 126 + 1337 = 1463. . Line 7 just prints the sum I calculated. . Well here comes another challenge, which I’ll do in pseudocode to demonstrate functionalities from 3.4 . bricks ← &quot;100 million&quot; milesDriven ← &quot;fifty thousand&quot; natlDebt ← &quot;thirty-one trillion dollars&quot; worldPop ← &quot;8 billion&quot; part1 ← substring(milesDriven, 1, 5) part2 ← substring(bricks, 5, 7) part3 ← substring(worldPop, 3, 7) wordSalad ← concat(part1, part2, part3, natlDebt) DISPLAY(wordSalad) . Lines 1-4 are simple enough. Assign some values to four variables. . Line 5 assigns the first 5 characters of milesDriven (which is “fifty”) to part1 . Line 6 assigns 7 characters from bricks to part2, starting with the fifth character from bricks. This is “million” . Line 7 assigns 7 characters from worldPop to part3, starting with the third character. This is “billion” . Line 8 is a monstrosity. It concatenates each of the part variables and the natlDebt variable. This is assigned to the wordSalad variable. . Line 9 outputs wordSalad, which is “fifty million billion thirty-one trillion dollars” . To be honest, I don’t know if it’s possible to run commands inside the concat parameters, so I assigned each of the substring commands its own variable. In fact, I didn’t find any of the substr or concat commands on the exam reference sheet, which is very peculiar. Of course that only resulted in my code failing to function on an online pseudocode tester. . Sequencing Challenge: Find num1 and num2 . num1 = 3 num2 = 1 num3 = 5 num1 = num2 + num3 num2 = num1 + num3 # num2 is now the new num1 + num3 . Lines 1-3 are just defining variables. | Line 4 assigns the sum of num2 and num3 to num1. The new value of num1 is 5 + 1 = 6. | Line 5 assigns the sum of num1 and num3 to num2. The new value of num2 is 6 + 5 = 11. | . 3.3 Hacks Part 3 . Looks like this doesn’t exist. . 3.4 Hacks . Test 1. Find the output. . firstName &lt;- &quot;Bob&quot; lastName &lt;- &quot;Smith&quot; var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, &quot;@gmail.com&quot;) DISPLAY(email) . Lines 1 and 2 assign values to the firstName and lastName. | Line 3 has a substring command, which starts at the first character of the value of firstName and moves one character. The result (which is B) is assigned to var. | Line 4 uses a concat command, which will concatenate (or chain) the inputs. It will take the lastName (Smith) and the var (B). The resulting string “SmithB” is assigned to name | Line 5 cocatenates the name variable and the string “@gmail.com” and assigns this to email. The value of email is “SmithB@gmail.com” (this is the answer by the way) | Line 6 prints the value of email to output. | . Test2. Find the output . word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) . Lines 1 and 2 assign values to word1 and word2 | Line 3: the len command counts the number of characters in a string. There are 8 characters in the value of word1 (which is “computer”). This divided by 2 is 4, which is assigned to length1 | Line 4: There are 9 characters in the value of word2 (which is “textbooks”). This divided by 3 is 3, which is assigned to length2 -Line 5 takes a substring command of the value of word1, going from the second character and reading however many characters is the value of len1. Oops, this variable doesn’t exist! word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, length1) second &lt;- substring(word2, length2+3, length2) newWord &lt;- concat(first, second) DISPLAY(newWord) . | . -That’s better. The value of length1 is 4, so it will take 4 characters from “computer” starting from the second character. This will yield “ompu” which is assigned to first . Line 6 takes substring of word2 (which is “textbooks”), starting with the character corresponding to 3 more than length2, which is 6. It will then take the amount of characters equal to length2, which is 3. Therefore, “ook” will be assigned to second . | Line 7 will concatenate first and second, assigning this to newWord . | . -Line 8 prints newWord, which is ompuook. .",
            "url": "https://leonard514.github.io/FastPage/sprint/hacks2",
            "relUrl": "/sprint/hacks2",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "3.1-3.2 Hacks .ipynb file",
            "content": "Lists . Lists allow for data abstraction . Variables like strings, numbers, characters, and more can be bundled together | It could be empty from the start and you can add more variables as needed | If you set one list equal to another list, or transfer data from one list to another, the data will be completely replaced. | You can also append data from one list to another, keeping the old data and adding the new data. | . Key Vocabulary . list: a sequence of several variables grouped together | variable: a way of storing information in a computer program, which could later be changed, referenced, and used | data types: a set of values and operations on those values | abstract data types: a data type whose internal representation is hidden from the client | client: a program that uses a data type | objects: a structure that can take on a data-type value | Applications programming interface (API): which is a list of constructors and instance methods or operations, used to specify the behavior of an abstract data type | . Big Ideas . Lists can store any types of elements. | In all lists operations, if a list index is less than 1 or greater than the length of the list, an error message is made and the program will terminate. | Data abstraction provides a separation between the abstract properties of a data type and the concrete details of its representation. | 1. Your turn to interact, try it now! . Modify the list to change the length to 5. . languages_list = [] languages_list = [&quot;Python&quot;, &quot;C++&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;C#&quot;] . 2. Change the following code to print out the list. . languages_list = [] languages_list = [&quot;Python&quot;, &quot;C++&quot;, &quot;JavaScript&quot;] print(languages_list) . [&#39;Python&#39;, &#39;C++&#39;, &#39;JavaScript&#39;] . 3. Change the following code to print out only &quot;Python&quot; . languages_list = [] languages_list = [&quot;Python&quot;, &quot;C++&quot;, &quot;JavaScript&quot;] print(languages_list[0]) . Python . 4. Replace contents/data of listA with contents/data from listB. . Print listA out afterward . listA = [] listA = [1, 55, 8, 2, 76] listB = [] listB = [22, 7, 13] listA = listB print(listA) . [22, 7, 13] . 5. Make 2 lists: . a list of string data | a list of number data | the length of the each list is a minimum of 4 | change the names of the lists | . listStr = [&quot;hrar&quot;, &quot;hi&quot;, &quot;why&quot;, &quot;who&quot;, &quot;how&quot;, &quot;qwerty&quot;, &quot;billion trillion&quot;] listNum = [1, 2, 10813908, 2147483647, 1234, 876687] . 6. Combine the list to contain all of the data from both lists. . Hint! Use extend or append listStr = [&quot;hrar&quot;, &quot;hi&quot;, &quot;why&quot;, &quot;who&quot;, &quot;how&quot;, &quot;qwerty&quot;, &quot;billion trillion&quot;] listNum = [1, 2, 10813908, 2147483647, 1234, 876687] listComb = listStr + listNum print(listComb) . [&#39;hrar&#39;, &#39;hi&#39;, &#39;why&#39;, &#39;who&#39;, &#39;how&#39;, &#39;qwerty&#39;, &#39;billion trillion&#39;, 1, 2, 10813908, 2147483647, 1234, 876687] . A Little Bit on Binary . A type of positional number system, with the base of 2 and uses exponents within it. | It is represented in zeroes and ones, each different column, lightbulb, or place representing a different value. From the right it starts as 2^0 which equals 1, then 2^1 = 2, then 2^2 = 4, and so on | It connects with data abstraction because the more complex data, calculating the value, is represented in binary with base of 2, however it is simplified to only show combinations of the digits zero and one. | . . Binary Hacks . Convert these binary notation to decimal notation. (the way we normally count) . The binary number 111. Click for the answer! 7 | . The binary number 1011. Click for the answer! 11 | . The binary number 1101011. Click for the answer! 107 | . Convert the decimal notation to binary notation. (You can use the Binary Math from Mr. Yeung or the one you have) . 12 Click for the answer! 1100 | . 44 Click for the answer! 101100 | . 254 Click for the answer! 11111110 | . Extra Binary Hacks if you changed your bits to 24 . Convert decimal notation to binary notation. . 57345 Click for the answer! 1110000000000001 | . 16777215 Click for the answer! 111111111111111111111111 | . 11184810 Click for the answer! 101010101010101010101010 | . Convert the binary notation to decimal notation . 101011101010 Click for the answer! 2794 | . 10011100000 Click for the answer! 1248 | . 1101001000101000 Click for the answer! 53800 | . Homework/Hacks . Consider the following code segment: . scores1 &lt;- [89, 78, 92, 63, 95, 88] | scores2 &lt;- [92, 79, 97, 63] | scores1 &lt;- scores2 | . What are the contents of scores1 after the code segment is executed?: . [89, 78, 92, 63, 95, 88] | [89, 78, 92, 63, 95, 88, 92, 79, 97, 63] | [92, 79, 97, 63, 89, 78, 92, 63, 95, 88] | [92, 79, 97, 63] | Click for the answer! 4. Because the data is not being appended from scores2 into scores1. . Consider the following code segment: . listA &lt;- [&quot;Sam&quot;, &quot;Ann&quot;] | listB &lt;- [&quot;Jamal&quot;, &quot;Tamara&quot;] | listB &lt;- listA | listA &lt;- listB | . What are the contents of listA after the code segment is executed? . [&quot;Sam&quot;, &quot;Ann&quot;] | [&quot;Jamal&quot;, &quot;Tamara&quot;] | [&quot;Sam&quot;, &quot;Ann&quot;, &quot;Jamal&quot;, &quot;Tamara&quot;] | [&quot;Jamal&quot;, &quot;Tamara&quot;, &quot;Sam&quot;, &quot;Ann&quot;] | Click for the answer! 1. Because all of the data from listA &quot;Sam&quot; and &quot;Ann&quot; replace what is in listB. So if listB replaces what is in listA, &quot;Sam&quot; and &quot;Ann&quot; will still be the only data in that list. . What is the length of this list? [&quot;Red&quot;, &quot;Orange&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Purple&quot;] . 5 | 7 | 6 | 4 | Click for the answer! 3. The length of the list is 6. . What is the index number of &quot;Purple&quot; in this list? [&quot;Red&quot;, &quot;Orange&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Purple&quot;] . 7 | 0 | 6 | 5 | Click for the answer! 4. The index count starts at 0, making &quot;Red&quot; 0 and &quot;Purple&quot; index 5. . Which of the following types of data can be stored in a list? . Boolean | String | Float | All of the above | Click for the answer! 4. Any type of data can be stored within a list. A list can contain a mix of types of data. . Which of the following variables is a float? . Apples | -106.2 | 34 | True | Click for the answer! 2. A float is a decimal number. . If a list has a length of 24 items, what is the index number of the 17th item? . 21 | 17 | 16 | 69 | Click for the answer! 3. An index count starts at 0 so the index number of a variable is one less than it&#39;s spot in the length. . A variable is permanent and cannot be changed later on. . True | False | Click for the answer! 2. False. Variables can be changed later on in the code. . Which of the following is true about the list? [&quot;Apples&quot;, 42.0, &quot;Bananas&quot;, 0.5, &quot;Avocado&quot;, -902.2, &quot;Lychee&quot;, 6.9, &quot;Orange&quot;, 7.2] . The list has floats and string variable types. | The ratio of float variables to string variables is 2:1. | The length is 9. | The index of &quot;Avocado&quot; is 4. | All of the above | 1 and 4 | 1, 3, and 4 | Click for the answer! 6. The list has floats or decimals and strings, and the length is 10, the ratio of string to floats is 1:1, and the index number of &quot;Avocado&quot; is 4. .",
            "url": "https://leonard514.github.io/FastPage/jupyter/3%20week%20sprint/2022/11/28/3.2hack.html",
            "relUrl": "/jupyter/3%20week%20sprint/2022/11/28/3.2hack.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "3.1-3.2 Hacks Blog",
            "content": "3.1 Part 1 Hacks (copied from site) . Go through the following examples and with your table discuss the best variable name and the data type for each situation and stored variable: . You want to store the best price for apples: Use a variable called priceApples which will be an integer type (so that the price could be added to/subtracted from) | You are storing true or false in a variable that asks if the classroom is cold: use a boolean variable called isCold | How do you store the ID numbers for the students in the classroom: use a list variable called IDList and store the elements as strings. Here’s an example: | IDList = [&quot;1324978&quot;, &quot;1235478&quot;, &quot;1324890&quot;, &quot;1634890&quot;] . 3.1 Part 2 Hacks (copied from site) . Please note that some of this is redundant with the previous section. . 1) You want to store the number of apples in a shop. What is the best variable name and data type? . Answer: (1) numApples, integer . This name is fairly descriptive and also allows for addition/subtraction operations in case apples are purchased or imported into the store (therefore changing the number of apples) . 2) You are storing true or false in a variable that asks if the classroom is cold. What is the best variable name and data type? . Answer: (3) isCold, boolean . A true or false value describes the boolean type variable. In addition, the variable name is descriptive of what is being measured (namely if a classroom is cold) . 3) How do you store the ID numbers for the students in the classroom? Choose the best variable name and data type: . Answer: (1) IDnumber, string . the name IDnumber is concise and is descriptive of what value is being stored into the variable. Since math is not performed on ID numbers, a string variable is appropriate. Note that this variable is appropriate to store the ID numbers of single students only. If multiple ID numbers need to be stored, a list should be created with string elements of each ID number. . 4) Is itisRainingtodayinsandiego a better option than isRaining? . Answer: (1) No . The variable itisRainingtodayinsandiego is too long and affects readability of the program. isRaining is far more concise and is almost just as descriptive as the former variable name. If there must be boolean variables for the weather of multiple cities (for example, for a weather program), a more concise form of this variable could be isRainingSD, though at some point a dictionary or array could be used to match cities to their corresponding weather conditions. . 5) Which of the following types of data is best for a true or false question? . Answer: (1) Boolean . A boolean variable contains either a true value or a false value. . 6) What is the difference between an integer and string of numbers? . Answer: (4) An integer can be changed with addition and subtraction and a string is a set number or string of letters . The answer is relatively self-explanatory, though it’s worth it to note that strings can also be made of combinations of numbers and letters (or even special characters) . Practice Scenario 1 . Suppose that a variable should be created which notes the type of device a student brings to a class. This variable should be a string variable called deviceType. Here’s an example: . deviceType = Desktop . If device type for multiple students need to be noted, a list should be used instead (using string elements) . Practice Scenario 2 . Suppose that a variable representing a student’s class grade is required. Keep in mind that a student’s grade is made up of averaged scores from many assignments and possibly grade categories. In this case, a float/integer variable called Grade should be used. If the grades of multiple students need to be recorded, a dictionary/array may be required with the student names as string elements and the grades as float/integer elements. . Practice Scenario 3 . Review scenario 2. Take scenario 2 with the additional information of trying to evaluate if each student is passing the class. For an individual student, this would probably be a boolean variable called isPassing. In order to determine the value of the variable, an if statement will likely be used. In the case of using this variable for multiple students in the class, there will likely be boolean elements associated with each student and his/her grade in a dictionary/array, and a loop will likely be used. . 3.1 Part 3 Hacks . 1) Consider the following code segment: . currentScore ⟵ 10 highScore ⟵ currentscore currentScore ⟵ 7 DISPLAY(currentScore) . What will the currentScore and highScore be after running this code segment? . Answer: (3) currentScore will have a value of 7 after running the code segment, as the most recent line of code set the value of currentScore equal to 7 . Answer: (2) highScore will have a value of 10 because after the value of 10 was assigned to the variable currentScore, the value of currentScore was assigned to highScore. . 2) Consider the following code segment: . num1 ⟵ 4 num2 ⟵ 6 num1 ⟵ num 2 DISPLAY(num1) DISPLAY(num2) . What is displayed after running this code segment? . Answer: (4) 6 6 is displayed after running the code segment. After the value 4 was assigned to num1 and value 6 was assigned to num2, the value of num2 was assigned to num1. This makes both variable have a value of 6. Therefore, 6 6 is displayed. . 3) Consider the following code segment: . num1 ⟵ 25 num2 ⟵ 15 num3 ⟵ 30 num2 ⟵ num3 num3 ⟵ num1 num1 ⟵ num2 DISPLAY(num1) DISPLAY(num2) DISPLAY(num3) . What is displayed after running this code segment? . Answer: (2). After the corresponding values are assigned to the three number variables in the first three lines of code, the value of num3 is assigned to num2, making num2 have value 30. num1 is assigned to num3, making it have value 25. Then, num2 is assigned to num1, making num1 have value 30. Here are the new values: . num1⟵30 num2⟵30 num3⟵25 . With this information, the display commands will run and display num1, then num2, then num3. Therefore, 30 30 25 will be displayed. . 4) Consider the following code segment: . p ⟵ 10 q ⟵ 20 r ⟵ 30 s ⟵ 40 p ⟵ q q ⟵ r s ⟵ q r ⟵ p . What is the value of r as a result of running this code segment . Answer: (2) It is important to note that r is assigned the value of p at Line 8. p was assigned the original value of q at Line 5. Therefore, the value of r is 20. . 5) Consider the following code segment: . first ⟵ true second ⟵ false second ⟵ first first ⟵ second . Insert Question . Answer: (3). The first two lines assigns true to first and false to second. The third line assigns the value of first to second, making both variables have the value true. The fourth line assigns second to first, which does nothing. Therefore, both variables have value true. . 6) Consider the following code segment: . a ⟵ 10 b ⟵ 20 c ⟵ 30 d ⟵ 40 x ⟵ 20 b ⟵ x + b a ⟵ x + 1 d ⟵ c / d + 2 DISPLAY(a) DISPLAY(b) DISPLAY(c) DISPLAY(d) . What is displayed as a result of executing the code segment? . Answer: (). The first five lines assign values to the variables a, b, c, d, and x. Line 6 assigns the sum of x and b (which is 40) to b. Line 7 assigns the sum of x and 1 (which is 21) to a. Line 8 assigns the quotient of c and d plus 2 (which is technically (30/40) + 2 or 2.75) to d. . At this point I realized this question might be miswritten because the answers were printing values of 40 or 50 for d . Anyways, the actual display as far as I’m concerned should be 21 40 30 2.75 (unless I’m getting something wrong with the decimal display) . Now according to the answer key, line 8 should actually be written as c + d / 2. This would make the value of d equal to c plus half of d (30 + 20 = 50). This would make the value of d 50 and answer (1) . 3.2 Hacks . Please see the Jupyter Notebook upload to see my interactions. . Binary hacks . Binary 111 = (1 + 2 + 4) = decimal 7 | Binary 1011 = (1 + 2 + 0 + 8) = Decimal 11 | Binary 1101011 = (1 + 2 + 0 + 8 + 0 + 32 + 64) = Decimal 107 | Decimal 12 = (8 + 4 + 0 + 0) = Binary 1100 | Decimal 44 = (32 + 0 + 8 + 4 + 0 + 0) = 0010 1100 | Decimal 254 = (128 + 64 + 32 + 16 + 16 + 8 + 4 + 2 + 0) = 1111 1110 | 24-bit binary hacks . Decimal to Binary: At this point I’d need a program . 57345 decimal = | 16777215 decimal = | 11184810 decimal = | Binary to Decimal . Binary 101011101010 = (0 + 2 + 0 + 8 + 0 + 32 + 64 + 128 + 0 + 512 + 0 + 2048) = Decimal 2794 | Binary 10011100000 = (0 + 0 + 0 + 0 + 0 + 32 + 64 + 128 + 0 + 0 + 1024) = Decimal 1248 | Binary 1101001000101000 = (0 + 0 + 0 + 8 + 0 + 32 + 0 + 0 + 0 + 512 + 0 + 0 + 4096 + 0 + 16384 + 32768) = 53800 | Final Hacks . DISCLAIMER . I have some deviations from the provided answers for a few of these questions. Please do not blindly subtract points for these differences and read my reasoning. Thank you! . 1) Consider the following code segment: . scores1 ← [89, 78, 92, 63, 95, 88] scores2 ← [92, 79, 97, 63] scores1 ← scores2 . What are the contents of scores1 after the code segment is executed? . Answer: (4). Lines 1 and 2 set the values of the lists scores1 and scores2. Line 3 overrides the value of scores1 with that of scores2. Therefore, the list of scores1 is that of scores2, namely [92, 79, 97, 63] . 2) Consider the following code segment: . listA &lt;- [&quot;Sam&quot;, &quot;Ann&quot;] listB &lt;- [&quot;Jamal&quot;, &quot;Tamara&quot;] listB &lt;- listA listA &lt;- listB . What are the contents of listA after the code segment is executed? . Answer: (1). In a similar manner to Question 1, Lines 1 and 2 define listA and listB. In Line 3, ListA overrides ListB, making them both have the contents [“Sam”, “Ann”]. Therefore, Line 4 (where ListB overrides ListA) does nothing since the lists have the same contents. Therefore, the contents of ListA are [“Sam”, “Ann”] . 3) What is the length of this list? [&quot;Red&quot;, &quot;Orange&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Purple&quot;] . Answer: (3) The length of this list is 6 because there are 6 elements (which are apparently basic colors). Each element in the list can be distinguished because they are separated by commas. The elements are put in quotation marks, indicating that they are string elements. . 4) What is the index number of “Purple” in this list? [&quot;Red&quot;, &quot;Orange&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Purple&quot;] . Answer: If CollegeBoard pseudocode is being followed (see page 3 of the pseudocode guide), the first element in a list has an index of 1. This is implied by the fact that there will be errors if an index less than 1 is used on a list operation. Therefore, the 6th element (which is “purple”) has an index of 6 and the answer is (3). Keep in mind that this may vary based on which programming language is used. . Now of course a well known example of this is the Python language, where the first element of a list has an index of 0. As such, the 6th element would have an index of 5 in Python and yield answer (4). . Now to prevent all this confusion, assign the list as a variable. Different languages have different syntaxes with defining lists, and these distinctions would make it more clear which rules to follow with indexing. . 5) Which of the following types of data can be stored in a list? . This one was tricky. I made some improvised code in python here. . isOnline = bool(1==2) aList = [1.1, 1.2, 1.3, 1.4, &quot;hrar&quot;, &quot;wow&quot;] print(aList) aList.extend(isOnline) print(aList) . I could not add a boolean variable to the list using extend commands, but having float data (1.1, 1.2) and strings printed just fine. Then I tried this: . isOnline = bool(1==2) aList = [1.1, 1.2, 1.3, 1.4, &quot;hrar&quot;, &quot;wow&quot;, bool(1==2)] print(aList) . Then the list printed just fine. Here’s output: [1.1, 1.2, 1.3, 1.4, &#39;hrar&#39;, &#39;wow&#39;, False]. This is probably an indication I didn’t use extend commands properly. . I’ll therefore answer with (4) . 6) Which of the following variables is a float? . Answer: (2). -106.2 is not an integer, but it is still a number (especially since it has decimals). This falls under the classification of float variables. A few statements about the other variables: . Apples could be a string variable if apples is the value of the variable. . 34 is an integer variable since it’s an integer. . True is the value of a Boolean variable, of which the other possible value is false. Boolean variables are the simplest variables and are binary. . 7) If a list has a length of 24 items, what is the index number of the 17th item? . Answer: If Python is being used, the first element in a list has an index of 0. Therefore, the 17th element has an index of 16 and the answer is (3). . If CollegeBoard pseudocode is being followed, the first element in a list has an index of 1. Therefore, the 17th element has an index of 17 and the answer is (2) . 8) A variable is permanent and cannot be changed later on. . Answer: (2). The values of existing variables can be changed in multiple ways. I’ll first mention that integer/float variables can have mathematical operations (ex: addition, subtraction, multiplication, and division) performed on them. These operations often change their values, and are crucial for the ability of programs to dynamically change numbers displayed (ex: displayed grades can be changed). Second, it is possible for an existing variable to be overwritten by another value. This often happens when one variable is copied onto another existing variable. . 9) Which of the following is true about the list? [&quot;Apples&quot;, 42.0, &quot;Bananas&quot;, 0.5, &quot;Avocado&quot;, -902.2, &quot;Lychee&quot;, 6.9, &quot;Orange&quot;, 7.2] . I’ll consider each of the four options one-by-one then come up with a final answer . i) There are strings in this list (assorted fruit) and some float elements ii) There are 5 string elements and 5 float elements. The ratio is 1:1. iii) There are 10 elements in the list, so the length is 10. iv) This one depends, and I’m not going to go over indexing differences between Python and pseudocode again since I already explained that twice. Here’s what I’ll say: . If Python is being used (which is probably what the makers of the question envisioned), “Avocado”, as the 5th element, has an index of 4. Therefore, the final answer is (6) . If CollegeBoard pseudocode is being used, “Avocado” has an index of 5. Therefore, the final answer is (1). .",
            "url": "https://leonard514.github.io/FastPage/sprint/hacks1",
            "relUrl": "/sprint/hacks1",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Binary Math (modified)",
            "content": "Binary Math with Conversions: RGB Edition . The button below will change color depending on your input. . Color Test Filler Text Filler Text . This uses the RGB (red green blue) color system, where each of these three colors has 256 intensities. This first system will determine the value of red. . Plus Binary Decimal Minus . +1 | 00000000 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | .",
            "url": "https://leonard514.github.io/FastPage/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "API Demo",
            "content": "import requests url = &quot;https://trivia-by-api-ninjas.p.rapidapi.com/v1/trivia&quot; querystring = {&quot;category&quot;:&quot;general&quot;,&quot;limit&quot;:&quot;7&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;d205112de0msh0d4deda4e76f24fp1d3d7fjsn2c684c769088&quot;, &quot;X-RapidAPI-Host&quot;: &quot;trivia-by-api-ninjas.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . [{&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;Zoophobia is the fear of ______&#34;, &#34;answer&#34;: &#34;Animals&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;Pierre Augustine Caron de Baumarchais play what Opera based on it&#34;, &#34;answer&#34;: &#34;Barber Of Seville&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;Hang on Sloopy&#39; was the official rock song of which band&#34;, &#34;answer&#34;: &#34;Ohio&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;When is turkey traditionally eaten in america&#34;, &#34;answer&#34;: &#34;Thanksgiving&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;What was mozart&#39;s first name&#34;, &#34;answer&#34;: &#34;Wolfgang&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;In the film &#39;titanic&#39;, who did leonardo dicaprio and kate winslet play&#34;, &#34;answer&#34;: &#34;Jack&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;What was founded in the UK 1694 because of war with France&#34;, &#34;answer&#34;: &#34;Bank Of England&#34;}] .",
            "url": "https://leonard514.github.io/FastPage/scripts/api-test",
            "relUrl": "/scripts/api-test",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Apcsp Concept",
            "content": ". Full list of questions: . Math Qs . 1) &gt; This Greek mathmetician supposedly designed a system of mirrors to set enemy ships on fire. . 1. &gt; Archimedes . 2) &gt; The sum of the first three digits of this irrational number is equal to the third power of one less than the first digit. . 1. &gt; pi . 3) &gt; This German mathematician famously feuded with Isaac Newton over which of them created calculus . 1. &gt; Gottfried Wilhem Leibniz . 4) &gt; It isn’t pi, but this Greek letter is commonly used to denote change . 1. &gt; delta . 5) &gt; This type of sum is named after a mathematician who specialized in geometry . 1. &gt; Rienmann . 6) &gt; Nobel Prize winner John Nash famously suffered from this mental disorder throughout his life . 1. &gt; schizophrenia . 7) &gt; A type of ratio, this metal is known for its softness and luster. . 1. &gt; Gold . CompSci Qs . 1) &gt; JavaScript requires all commands to end with this character . 1. &gt; Semicolon (;) . 2) &gt; The creator of Python, Guido van Rossum, is Dutch. The capital of his home country is this city . 1. &gt; Amsterdam . 3) &gt; When a phrase is encased in quotation marks (“”), it is known as this . 1. &gt; String . 4) &gt; What is the system used to fetch web pages based on a URL (ex: google.com)? . 1. &gt; Domain Name System (DNS) . 5) &gt; How would you write an HTML comment with the content “Stores variables” (without quotes)? . 1. &gt; &lt; !-- Stores variables -- &gt; . . 6) &gt; Refer to the python code. What will be the final value of the variable count? Round to 3 decimal places. . 1. &gt; 1.618 . 7) &gt; Sharing a name with a fairy-like creature in European folklore, a collection of images put into a single image in JavaScript. . 1. &gt; sprite . Ireland Qs . 1) &gt; This staple crop of Ireland was famously over exported to Great Britain in the early 1900s, leading to a famine . 1. &gt; potatoes . 2) &gt; Saint Patrick is known for driving all of these from Ireland, a metaphor for the Celts that kidnapped him as a child . 1. &gt; snakes . 3) &gt; Lucky! This alternate name for clovers is a staple in modern imaginations of the leprechaun. . 1. &gt; shamrock . 4) &gt; Bells of Ireland are known for symbolizing this quality, a much desired trait for the hapless . 1. &gt; Good Luck . 5) &gt; Britian gained rule over Ireland in the Anglo-Saxon invasion in this year where Henry II and Louis VII made an alliance through the betrothal of their children . 1. &gt; 1169 . 6) &gt; #00FF00, #FFFFFF and #FFA500 is how you make the Irish flag in this color system . 1. &gt; hexadecimal . 7) &gt; Cathal Brugha was the first of these for Ireland and held this position for three years until his death in 1922 . 1. &gt; Prime Minister . Sports Qs . 1) &gt; In Soccer / Fútbol, which player has the most Ballen D’ors? . 1. &gt; Lionel Messi . 2) &gt; Who has the most touchdowns in NFL history? . 1. &gt; Jerry Rice . 3) &gt; Who won the 2018 Russia World Cup (Fútbol)? . 1. &gt; Russia . 4) &gt; Which two teams were in the 2021 NBA Finals? . 1. &gt; Milwaukee Bucks &amp; Phoenix Suns . 5) &gt; Out of his 61 professional fights, how many fights did Muhhamad Ali win? . 1. &gt; 56 . 6) &gt; Tom Hanks says “There’s no crying in baseball!” in this 1992 film . 1. &gt; A League of their Own . 7) &gt; The national sport of Pakistan, while not its most famous sport, was portrayed in the 2007 Bollywood film Chak de! India . 1. &gt; Field Hockey . Literature Qs . 1) &gt; The author of War of the Worlds and the Time Machine . 1. &gt; H. G. Wells . 2) &gt; The protagonists in the John Green novel The Fault in Our Stars tastelessly kiss where this Dutch girl hid with her family during the Holocaust. . 1. &gt; Anne Frank . 3) &gt; Ponyboy Curtis recites a poem by this man, who also wrote The Road Not Taken . 1. &gt; Robert Frost . 4) &gt; Khalil Gibran details his thoughts on society in his 1925 book named for this holy figure . 1. &gt; Prophet . 5) &gt; Mary Shelley’s 1816 Romantic novel The Modern Prometheus is said to have kickstarted this genre . 1. &gt; Science Fiction . 6) &gt; The protagonist of this novel exchanges emails with a fellow gay student at his school, and risks getting outed by one of his peers. It recieved a film adaptation in 2018 . 1. &gt; Simon vs the Homo Sapiens Agenda . 7) &gt; A chapter in this 1008 novel is completely blank to signify the death of the viewpoint character . 1. &gt; The Tale of Genji . Video Games Qs . 1) &gt; The creator of the Super Mario and Legend of Zelda franchises . 1. &gt; Shigeru Miyamoto . 2) &gt; A staple character in pop culture since his 1938 conception, he starred in a famously bad game on the Nintendo 64 in 1999 . 1. &gt; Superman . 3) &gt; The notoriously difficult final boss of this game, along with its soundtrack, has skyrocketed this game’s popularity. Name the 2015 indie game where a child falls into the land of monsters. . 1. &gt; Undertale . 4) &gt; This 1994 fully CGI show was infamously given a continuation in 2018 centered around video games . 1. &gt; ReBoot . 5) &gt; The long running Kamen Rider franchise aired a season based on video games this year, more widely known for a large amounts of celebrities, including Prince and Alan Rickman, dying . 1. &gt; 2016 . 6) &gt; The company Mojang, known for creating Minecraft, is based in this country, where one of its cities is the namesake for a condition where a captive identifies with their kidnapper . 1. &gt; Sweden . 7) &gt; This actor had a prominent role in the marketing for the known disappointment Cyberpunk 2077. They are better known for their role in Bill and Ted’s Excellent Adventure . 1. &gt; Keanu Reeves . Science Qs . 1) &gt; Neodymium, a metal used in super magnets, is an element in this group on the periodic table . 1. &gt; Lanthanides . 2) &gt; Cortisol is a hormone released by the brain when the body is undergoing this emotion . 1. &gt; stress . 3) &gt; Marble is a metamorphic rock that came from this sedimentary rock . 1. &gt; limestone . 4) &gt; Alfred Nobel, founder of the Nobel Prize, created this material used in construction and demolition . 1. &gt; dynamite . 5) &gt; This animal’s scientific name is the same word twice . 1. &gt; Western (Lowland) Gorilla 2. &gt; Red Fox 3. &gt; European Magpie 4. &gt; Red-footed Booby 5. &gt; European Badger 6. &gt; Common skunk/striped skunk 7. &gt; European Grass Snake 8. &gt; Eurasian Eagle Owl 9. &gt; Ocean Sunfish 10. &gt; Eurasian Otter 11. &gt; American Bison . 6) &gt; Alan Turing, the inventor of the computer, was a World War II code breaker for this country . 1. &gt; England . 7) &gt; Edward Jenner developed the smallpox vaccine after noticing the people who had contracted this disease never contracted smallpox . 1. &gt; Cowpox .",
            "url": "https://leonard514.github.io/FastPage/word/2022/10/10/APCSP-Concept.html",
            "relUrl": "/word/2022/10/10/APCSP-Concept.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "API Demo",
            "content": "import requests url = &quot;https://trivia-by-api-ninjas.p.rapidapi.com/v1/trivia&quot; querystring = {&quot;category&quot;:&quot;general&quot;,&quot;limit&quot;:&quot;7&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;d205112de0msh0d4deda4e76f24fp1d3d7fjsn2c684c769088&quot;, &quot;X-RapidAPI-Host&quot;: &quot;trivia-by-api-ninjas.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . [{&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;Zoophobia is the fear of ______&#34;, &#34;answer&#34;: &#34;Animals&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;Pierre Augustine Caron de Baumarchais play what Opera based on it&#34;, &#34;answer&#34;: &#34;Barber Of Seville&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;Hang on Sloopy&#39; was the official rock song of which band&#34;, &#34;answer&#34;: &#34;Ohio&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;When is turkey traditionally eaten in america&#34;, &#34;answer&#34;: &#34;Thanksgiving&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;What was mozart&#39;s first name&#34;, &#34;answer&#34;: &#34;Wolfgang&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;In the film &#39;titanic&#39;, who did leonardo dicaprio and kate winslet play&#34;, &#34;answer&#34;: &#34;Jack&#34;}, {&#34;category&#34;: &#34;general&#34;, &#34;question&#34;: &#34;What was founded in the UK 1694 because of war with France&#34;, &#34;answer&#34;: &#34;Bank Of England&#34;}] . import requests url = &quot;https://trivia-by-api-ninjas.p.rapidapi.com/v1/trivia&quot; querystring = {&quot;category&quot;:&quot;historyholidays&quot;,&quot;limit&quot;:&quot;15&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;d205112de0msh0d4deda4e76f24fp1d3d7fjsn2c684c769088&quot;, &quot;X-RapidAPI-Host&quot;: &quot;trivia-by-api-ninjas.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . [{&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;In which 1970&#39;s films does Dustin Hoffman play the character &#39; Lenny Bruce&#39; ? &#34;, &#34;answer&#34;: &#34;Lenny&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;James Dean died during the filming of which film in 1955? &#34;, &#34;answer&#34;: &#34;Giant&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Who Directed The Original Halloween Movie &#34;, &#34;answer&#34;: &#34;John Carpenter&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Good King Wenceslas was a 12th Century king of which country &#34;, &#34;answer&#34;: &#34;Bohemia&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;This word describes the Nazi annihilation of Jews.&#34;, &#34;answer&#34;: &#34;Holocaust&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Who invented the wristwatch?&#34;, &#34;answer&#34;: &#34;Louis Cartier&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;In 1952. &#39;Elizabeth Becomes Queen&#39;. Who was her late father? &#34;, &#34;answer&#34;: &#34;George Vi&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Which country blew up a Greenpeace ship in New Zealand?&#34;, &#34;answer&#34;: &#34;France&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;The Christmas period of 1813-14 saw the last what in London? &#34;, &#34;answer&#34;: &#34;Christmas Fair On a Frozen River Thames (known As a Frost Fair)&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Who was &#34;The Mad Monk &#34;&#34;, &#34;answer&#34;: &#34;Rasputin&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Which Footballer Was Sent home From The 1978 Football World Cup For Taking Illegal Substances &#34;, &#34;answer&#34;: &#34;Willie Johnston&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;In 1954 Roger Bannister achieved the worlds 1st Sub 4 min mile in what English County did this take place &#34;, &#34;answer&#34;: &#34;Oxforshire&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Which 50&#39;s Movie features the Line &#39; I&#39;ll follow him around the Horn, and around the Norway Maelstrom, and around perditions flames&#39; &#34;, &#34;answer&#34;: &#34;Moby Dick&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Which American Military Academt was established in 1802 on the Hudson river ?&#34;, &#34;answer&#34;: &#34;West Point&#34;}, {&#34;category&#34;: &#34;historyholidays&#34;, &#34;question&#34;: &#34;Name the original eight reindeer from the &#39;Twas the night Before Christmas&#39; poem. &#34;, &#34;answer&#34;: &#34;Comet, Cupid, Dasher, Dancer, Prancer, Vixen, Donner, Blitzen (or Dunder And Blixem)&#34;}] . import requests url = &quot;https://trivia-by-api-ninjas.p.rapidapi.com/v1/trivia&quot; querystring = {&quot;category&quot;:&quot;entertainment&quot;,&quot;limit&quot;:&quot;30&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;d205112de0msh0d4deda4e76f24fp1d3d7fjsn2c684c769088&quot;, &quot;X-RapidAPI-Host&quot;: &quot;trivia-by-api-ninjas.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . [{&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What is the mother&#39;s name in Family Circus&#34;, &#34;answer&#34;: &#34;Thelma&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What is the name of the Volkswagen in the film, &#34;The Love Bug &#34;?&#34;, &#34;answer&#34;: &#34;Herbie&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Which band does Eddie Vedder with?&#34;, &#34;answer&#34;: &#34;Pearl Jam&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Who produced &#39;Sgt Pepper&#39;s Lonely Hearts Club Band&#39;?&#34;, &#34;answer&#34;: &#34;George Martin&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Was Shirley Temple 21, 25 or 29 when she made her last film?&#34;, &#34;answer&#34;: &#34;21&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What was Lucy&#39;s maiden name on &#39;I Love Lucy&#39;?&#34;, &#34;answer&#34;: &#34;Mcgillicuddy&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What is Peter Parker&#39;s secret identity?&#34;, &#34;answer&#34;: &#34;Spiderman&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Who played the lead in the movie &#34;The Mask &#34;?&#34;, &#34;answer&#34;: &#34;Jim Carrey&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Who sings &#39;Sweet Home Alabama&#39;?&#34;, &#34;answer&#34;: &#34;Lynyrd Skynyrd&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What famous classical composer continued to compose great music after becoming deaf?&#34;, &#34;answer&#34;: &#34;Ludwig Van Beethoven&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Which Elton John song was re-recorded as a requiem for Lady Diana Spencer?&#34;, &#34;answer&#34;: &#34;Candle In The Wind&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;In which film did Jay Leno play &#39;Mookie&#39;?&#34;, &#34;answer&#34;: &#34;American Hot Wax&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Name Li&#39;l Abner&#39;s favorite Indian drink.&#34;, &#34;answer&#34;: &#34;Kickapoo Joy Juice&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What did Hannibal Lecter like to eat with liver?&#34;, &#34;answer&#34;: &#34;Fava Beans&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Who wrote the song &#39;Do They Know It&#39;s Christmas&#39; with Bob Geldof?&#34;, &#34;answer&#34;: &#34;Midge Ure&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What was Elvis Presley&#39;s twin brother&#39;s name?&#34;, &#34;answer&#34;: &#34;Garon&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;In the film &#39;Home Alone&#39;, who played the baddies?&#34;, &#34;answer&#34;: &#34;Joe Pesci And Daniel Stern&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What was Keanu Reeves&#39; first big film?&#34;, &#34;answer&#34;: &#34;Point Break&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Who co-starred with Julie Andrews in &#34;Mary Poppins &#34;?&#34;, &#34;answer&#34;: &#34;Dick Van Dyke&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Mentor of Titan had two children in the Marvel comics, Thanos and ___?&#34;, &#34;answer&#34;: &#34;Ero&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Hanna-Barbera rose to fame by creating what duo for MGM?&#34;, &#34;answer&#34;: &#34;Tom And Jerry&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What night club did Ricky work at on &#39;I Love Lucy&#39;?&#34;, &#34;answer&#34;: &#34;The Tropicana&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Who played the mayor of the munchkins in &#39;The Wizard of Oz&#39;?&#34;, &#34;answer&#34;: &#34;Charlie Becker&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;The Who&#39;s rock musical stars Elton John. It&#39;s called ________.&#34;, &#34;answer&#34;: &#34;Tommy&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Who was the original voice of Mickey Mouse?&#34;, &#34;answer&#34;: &#34;Walt Disney&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What is Batman&#39;s butler Alfred&#39;s last name.&#34;, &#34;answer&#34;: &#34;Pennyworth&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What song was originally &#39;Good Morning To You&#39; before the words were changed and it was published in 1935?&#34;, &#34;answer&#34;: &#34;Happy Birthday To You&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;What do the initials of the band NIN stand for?&#34;, &#34;answer&#34;: &#34;Nine Inch Nails&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;The theme tune for &#39;Monty Python&#39;s Flying Circus&#39; was written by which composer?&#34;, &#34;answer&#34;: &#34;John Philip Sousa&#34;}, {&#34;category&#34;: &#34;entertainment&#34;, &#34;question&#34;: &#34;Secret Identities: Jimmy Olson&#34;, &#34;answer&#34;: &#34;Elastic Lad&#34;}] .",
            "url": "https://leonard514.github.io/FastPage/scripts/api-test",
            "relUrl": "/scripts/api-test",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is letter &quot; + str(i+1) + &quot; in the alphabet&quot;) i += 1 . The letter f is letter 6 in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 1 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is letter &quot; + str(count) + &quot; in the alphabet&quot;) count += 1 . The letter y is letter 25 in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt;= 100 : numbers.append(i) i += 1 for i in numbers: if numbers[i] == 0: pass elif numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . from tkinter.messagebox import YES menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99, &quot;combo&quot;: 4.99, &quot;onion rings&quot;: 2.99, &quot;salad&quot;: 5.99, &quot;chicken nuggets&quot;: 3.25} #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times def inputcollect(): global total item = input(&quot;Please select an item from the menu&quot;) total = total + menu[str(item)] question = input(&quot;Do you want to order anything else (yes/no)?&quot;) if question == &quot;yes&quot;: inputcollect() else: return total total = 0 print(total) inputcollect() #code should add the price of the menu items selected by the user print(&quot;$&quot; + str(total)) . ModuleNotFoundError Traceback (most recent call last) Cell In [19], line 1 -&gt; 1 from tkinter.messagebox import YES 4 menu = {&#34;burger&#34;: 3.99, 5 &#34;fries&#34;: 1.99, 6 &#34;drink&#34;: 0.99, (...) 9 &#34;salad&#34;: 5.99, 10 &#34;chicken nuggets&#34;: 3.25} 13 #shows the user the menu and prompts them to select an item ModuleNotFoundError: No module named &#39;tkinter&#39; . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://leonard514.github.io/FastPage/notebooks/troubleshooting",
            "relUrl": "/notebooks/troubleshooting",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Week 5 Review Ticker",
            "content": "Hi! This is supplemental content for my Week 6 Review Ticket. I will first provide evidence I did the College Board MCQ. . . Second, I will present my website, which is not here. That’s a live presentation. .",
            "url": "https://leonard514.github.io/FastPage/notes/js_table",
            "relUrl": "/notes/js_table",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "A JavaScript Test!",
            "content": "Hi! Welcome to the JavaScript Test! Some basic stuff here. . console.log(&quot;Hello World!&quot;) . Hello World! . Yeah, that&#39;s basic. I need to try a Random number generator. This will actually be a test for part of my Night at the Museum concept, specifically the one where there&#39;s a 5% chance for any question to be doubled points. . // Makes a list, declares variables var rng var number rng = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]; // Fisher-Yates Shuffle, grabbed from https://bost.ocks.org/mike/shuffle/. Very useful. // In the theoretical jeopardy program, this script would be run every time // the user clicks on a question. function shuffle(rng) { var m = rng.length, t, i; // While there remain elements to shuffle… while (m) { // Pick a remaining element… i = Math.floor(Math.random() * m--); // And swap it with the current element. t = rng[m]; rng[m] = rng[i]; rng[i] = t; } return rng; } shuffle(rng) // sets number, prints values of variables to verify everything is working properly number = rng[11] console.log(rng) console.log(number) // This is the random number generator if (number == 10) { console.log(&quot;The number 10 was picked, in the Jeopardy this would be daily double&quot;) } else { console.log(&quot;The number 10 was not picked, this is no daily double&quot;) console.log(number) } . [ 19, 3, 13, 11, 15, 5, 14, 17, 16, 4, 1, 9, 20, 18, 10, 7, 8, 12, 2, 6 ] 9 The number 10 was not picked, this is no daily double 9 . A few things to talk about. First, variables must be declared in Java. This looks like . var rng var number rng = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]; . In this case, rng and number are declared. They do not have values yet. Then, I set rng equal to a list with all numbers from 1 to 20. Then I defined a function called shuffle, with the list as the parameter using function shuffle(rng) {. Here&#39;s what it does: . var m = rng.length, t, i; . This declares variables m, t, and i, and sets variable m equal to the number of entries in the list rng . while (m) . This executes associated commands on all items in the rng . i = Math.floor(Math.random() * m--); . This sets i equal to a value. Math.floor rounds any number down. Math.random() picks a random number between 0 and 1. And m-- decreases m by 1. Then: . t = rng[m]; rng[m] = rng[i]; rng[i] = t; . This sets t equal to the mth value of rng, then sets that equal to the ith value of rng, which is then set equal to t. . That&#39;s a little unclear, so I&#39;ll state that in simpler terms. This code goes to the back entry in the list and collects its value. Then, this entry is set equal to the entry randomly selected in the while loop. Then, the entry selected in the list is set equal to the former value of the last entry. Given that m-- is used for each entry, the loop effectively then repeats this process but for the second-to-last entry in the list, then the third-to-last, etc. . return rng; takes the value of the list outside the function, allowing it to be used in later commands. . number = rng[11] sets the variable number equal to the 11th entry in rng. It really doesn&#39;t matter which entry is picked since the list is randomized anyways. Then: . if (number == 10) { console.log(&quot;The number 10 was picked, in the Jeopardy project the given question would be daily double&quot;) } else { console.log(&quot;The number 10 was not picked, this is no daily double&quot;) console.log(number) } . The if statement: Essentially checks if the value of the variable number, or the 11th entry in rng, is equal to 10. Any number from 1 to 20 can be checked since all those numbers are in the list. If this is satisfied, it prints that the question in a jeopardy project would be a daily double. The function of this code is essentially a random number generator so that there&#39;s a 5% chance that a condition be satisfied. In the real jeopardy project, another command would be associated with the if statement which would double the value of a variable serving as the base number of points if a question is answered correctly. . If the condition is not satisfied, it prints that there will be no daily double. .",
            "url": "https://leonard514.github.io/FastPage/scripts/js_test",
            "relUrl": "/scripts/js_test",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Week 3 Create Performance Task",
            "content": "The Project Idea . My sister and I had this idea a while back of creating an app to monitor mental health. We didn’t make any progress, but the concept was fair. So I’ll have a go at it with the Create Performance Task. Here are a few ideas. . Providing a list of emergency numbers (I don’t know how a calling function would be able to work, especially since this is meant to be a PC program; the previous concept was a mobile program) | Log daily hours of sleep and display graphically (sleep is important for mental health!) | Log time/activities spent with family or friends | . Of course I need to check all the boxes, so I’ll do that real quick. All of this will be based on only one part of the program (the sleep data part), but the other parts will be in the final product as well. . Row 1: Program Purpose and Function . Take for example the log of the daily hours of sleep. . I would theoretically make a textbox for user input. This would have two pieces of information to input: the date and how much sleep (hours) was taken. . | This information would be outputted graphically. A possibility would have time represented on an x-axis and hours of sleep represented on the y-axis. Each day would be represented by a dot, and the dots will be connected with straight lines. . | The functionality is essentially that a user enters sleep data every day, and the program organizes the data so the user could more easily understand trends of sleep and get appropriate sleep accordingly. . | . Rows 2 and 3: Data Abstraction and Managing Complexity . Rows 2 and 3 will be answered with the same response (3b) on the exam, and they both have to do with lists… so I think it’s appropriate to group them here. The way this will play out (according to the present plan) will be very similar to the Python Lists and Dictionaries activity. . I will make a list of dictionaries named SleepData = [] . | Then using the user input, I will store the input into a list using append commands, with the date being stored in the Date portion of the entry and the number of sleep hours being stored in the Sleep_Hours portion of the entry. In order to append the data, the input would likely be stored in variables before they are used in append commands. . | I will then use a loop to iterate through each item in the list to display all of the days in which data is collected. . | Without a list of dictionaries, it would be very difficult to associate each day with the number of hours of sleep each day. Separate variables could possibly be made for each day and each number of hours of sleep, but the number of variables which would eventually build up would make the solution impractical… possibly unless the variables were stored in some separate file and then imported. Even then, a loop must be used to iterate through the variables, raising the question of whether this would be functionally equivalent to using a list but with greater complexity. . | . Therefore, use of a list is optimal in making output. . Rows 4, 5, and 6: Procedural Abstraction, Algorithm Implementation, and Testing . To output the results of the list graphically, a function would be required. This function would likely involve a for loop and commands required to graphically display the data. . | In order to pass the “two calls with different arguments” check in Row 6, I will make variations for how the data is displayed. There will be two forms of variations: . | . The way the data is displayed (by line graphs, bar graphs, by tables, etc.) | The amount of days for which data is displayed (for past week, for past month, for past 3 months, for past year, or all-time) | I don’t know what graphical displays would look like in terms of code, but in terms of tables I expect to see something functionally similar to the liquid syntax from Week 2. .",
            "url": "https://leonard514.github.io/FastPage/notes/performance_plan",
            "relUrl": "/notes/performance_plan",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Week 3 Javascript Quiz Blog",
            "content": "Below I describe the procedures that I and Abdullah took to make the quiz. We began with planning a topic, then made the actual questions. The questions are given with correct answers in bold. . Quiz Questions . 1) What is the capital of Iceland? a) Reykjavik b) Kopavogur c) Hafnarfjoerdur d) Akureyri 2) What is the capital of Brazil? a) Rio de Janerio b) Brasilia c) Sao Paulo d) Lisbon 3) What is the capital of Pakistan? a) Lahore b) Karachi c) Islamabad d) Mumbai . Coding . I should probably link the project first. . Full Code var correct = 0; onEvent(&quot;StartButton&quot;, &quot;click&quot;, function( ) { setScreen(&quot;Question1&quot;); }); onEvent(&quot;reykjavik&quot;, &quot;click&quot;, function __() { console.log(&quot;reykjavik clicked!&quot;); correct ++; console.log(correct); setScreen(&quot;Question2&quot;);}); onEvent(&quot;kopavogur&quot;, &quot;click&quot;, function __() { console.log(&quot;kopavogur clicked!&quot;); setScreen(&quot;Question2&quot;);}); onEvent(&quot;akureyri&quot;, &quot;click&quot;, function __() { console.log(&quot;akureyri clicked!&quot;); setScreen(&quot;Question2&quot;);}); onEvent(&quot;hafnarfjoedur&quot;, &quot;click&quot;, function __() { console.log(&quot;hafnarfjoedur clicked!&quot;); setScreen(&quot;Question2&quot;);}); onEvent(&quot;brasilia&quot;, &quot;click&quot;, function __() { console.log(&quot;brasilia clicked!&quot;); correct ++; console.log(correct); setScreen(&quot;Question3&quot;);}); onEvent(&quot;lisbon&quot;, &quot;click&quot;, function __() { console.log(&quot;lisbon clicked!&quot;); setScreen(&quot;Question3&quot;);}); onEvent(&quot;SaoPaulo&quot;, &quot;click&quot;, function __() { console.log(&quot;SaoPaulo clicked!&quot;); setScreen(&quot;Question3&quot;);}); onEvent(&quot;rio&quot;, &quot;click&quot;, function __() { console.log(&quot;rio clicked!&quot;); setScreen(&quot;Question3&quot;);}); onEvent(&quot;islamabad&quot;, &quot;click&quot;, function __() { console.log(&quot;islamabad clicked!&quot;); correct ++; console.log(correct); setScreen(&quot;Results&quot;);}); onEvent(&quot;karachi&quot;, &quot;click&quot;, function __() { console.log(&quot;karachi clicked!&quot;); setScreen(&quot;Results&quot;);}); onEvent(&quot;lahore&quot;, &quot;click&quot;, function __() { console.log(&quot;lahore clicked!&quot;); setScreen(&quot;Results&quot;);}); onEvent(&quot;mumbai&quot;, &quot;click&quot;, function __() { console.log(&quot;mumbai clicked!&quot;); setScreen(&quot;Results&quot;);}); console.log(correct); onEvent(&quot;Results&quot;, &quot;mouseover&quot;, function( ) { setText(&quot;scorereport&quot;, &quot;Congratulations!!! You got &quot; + ((correct + &quot;/3&quot;) + &quot; correct!!!&quot;)); }); We started coding the designs. code.org uses Javascript. We first defined a variable. . var correct = 0; . This command sets a variable correct to 0 . We then used the onEvent command to configure what happens when buttons or textboxes were clicked. A sample is visible below. . onEvent(&quot;StartButton&quot;, &quot;click&quot;, function( ) { setScreen(&quot;Question1&quot;); }); . Similar to if statements, loops, and other commands, onEvent has associated commands. . The first criteria of onEvent, StartButton, defines what object the command applies to. This is an app, so there are objects such as buttons, textboxes, and images. | The second criteria, click, determines the action which triggers the command. | The associated command is setScreen, which as implies sets the screen to the named screen (in this case Question1) | . There were many onEvent commands which were highly similar. . onEvent(&quot;reykjavik&quot;, &quot;click&quot;, function __() { console.log(&quot;reykjavik clicked!&quot;); correct ++; console.log(correct); setScreen(&quot;Question2&quot;);}); . This does a few more things. console.log prints the text inside the parenthesis and quotes to console. It can also print the value of a variable (in this case correct). This was extremely useful for debugging purposes, as I will elaborate on shortly. . correct ++ simply increases the value of the correct variable by 1. . I will now discuss the primary issue we encountered in the project. . setText(&quot;scorereport&quot;, (&quot;Congratulations!!! You got &quot; + correct) + &quot;/3&quot; + &quot; correct!!!&quot;); . This command was placed at the very end of our code. It essentially put the text into the textbox named scorereport Whenever we ran the code, we found that at the end the score was either 0 or undefined. . In order to figure out the issues, we used a command which was seen in the second onEvent command . console.log(correct); . Using this, we found that the variable correct was indeed increasing if the correct answers to the questions were selected. Therefore, the issue was that the last line of code was run before the quiz was even taken (when the variable correct was 0). To solve this issue, we made the setText command to be executed as part of an onEvent command. Here was the final version of the command. . onEvent(&quot;Results&quot;, &quot;mouseover&quot;, function( ) { setText(&quot;scorereport&quot;, &quot;Congratulations!!! You got &quot; + ((correct + &quot;/3&quot;) + &quot; correct!!!&quot;)); }); . The Results page was the final page where the score was displayed. The event was mouseover, which is essentially if the mouse is over the page. This made it so the command was executed only when the quiz taker entered the page, ensuring that the correct value for the number of correct answers was outputted. .",
            "url": "https://leonard514.github.io/FastPage/notes/javascript_quiz",
            "relUrl": "/notes/javascript_quiz",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Week 2 Review Ticket",
            "content": "Hi! . This is part of the Week 2 Review Ticket. If you came here, I hope you came here from the github issue. If not, please take a look right here. That being said, if you missed where the python is, it’s here! . Anyways, if you came from the github issue, you are probably here for the fastpages/web development part of the submission. That part of the submission is too complex to just stick a single link in the title without a dedicated post, so here’s to the changes! . Changes!!! . There are quite a few things in the HTML hacks that I have had previously for a while. In case you missed the tags and search pages: . Tags | Search | . My website has plenty of “time box fragments” (otherwise known as tables), including the one below. If you want to see a lot of tables, you should see my notes page. . Also, you probably noticed that my website has a different color scheme. Specifically, my top bar is black while the rest of the background is navy blue. I had to make quite a few customizations to an example dark mode file (as well as the default fastpages-styles.scss file) to change the colors of the background and the text to ensure a dark background and text with sufficient contrast. . I also had an adventure modifying the theme of my website. For notes about that adventure, click here.. I decided to remove the theme since it removed the top bar, making it harder to access the tags page. . Now, here’s a table of my daily progress . Date Activities completed . August 29 | First attempt at theme integration using _config.yml. The theme was not inputted correctly, breaking the CI task in fastpages and making it impossible to update the website. | . August 30 | Learned about dictionaries in a list in python. Added new information into the given list of dictionaries InfoDB, and demonstrated how to output list items backwards and in a random order. | . August 31 | Attempted to make a python quiz using a new list of dictionaries QuizDB, but got stuck due to various issues within the for loop and since I was appending my question/answer pairs to InfoDb instead of QuizDB. Also tried to append to a list using input and had trouble due to quotation issues. I eventually fixed the issue using f”{var_name}”, which allowed printing of any variable value inside the quotation marks. Also learned about how I inputted my website theme wrong in a lesson, and revised that. Had trouble customizing dark mode example code. | . September 1 | Was able to customize dark mode, making all parts of the website except the top bar navy blue (the top bar is the default dark-mode color) | . September 2 | Customized the text color to contrast sufficiently with the background. | . Remaining tasks . Figure out how to control site status (when it’s up and down) | .",
            "url": "https://leonard514.github.io/FastPage/submissions/Week_2_Submission",
            "relUrl": "/submissions/Week_2_Submission",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Python Loop Scripts!",
            "content": "Hi! . On this page I will demonstrate loops... again like I did on my python quiz. But first we have to make a dictionary within a list. This will store a lot of information.. Most of the variable names are self-explanatory... DOB stands for Date of Birth . InfoDb = [] # Append my info InfoDb.append({ &quot;FirstName&quot;: &quot;Leonard&quot;, &quot;LastName&quot;: &quot;Wright&quot;, &quot;DOB&quot;: &quot;December 13&quot;, &quot;Highest School&quot;: &quot;Del Norte High School&quot;, &quot;Favorite Course&quot;: &quot;AP Comp Sci Principles&quot;, &quot;Occupation&quot;: &quot;Student&quot;, &quot;Favorite Food&quot;: &quot;Panko Chicken&quot;, &quot;Favorite Color&quot;: &quot;Brown&quot;, &quot;Favorite Movie&quot;: &quot;Back to the Future&quot;, &quot;Favorite Activity&quot;: &quot;Experimenting with Computers&quot;, }) # Append my sister&#39;s info InfoDb.append({ &quot;FirstName&quot;: &quot;Lindsay&quot;, &quot;LastName&quot;: &quot;Wright&quot;, &quot;DOB&quot;: &quot;December 3&quot;, &quot;Highest School&quot;: &quot;Rice University&quot;, &quot;Favorite Course&quot;: &quot;Fluid Mechanics&quot;, &quot;Occupation&quot;: &quot;Student, Research Intern, Systems Engineer&quot;, &quot;Favorite Food&quot;: &quot;Wonton&quot;, &quot;Favorite Color&quot;: &quot;Green&quot;, &quot;Favorite Movie&quot;: &quot;The Martian&quot;, &quot;Favorite Activity&quot;: &quot;Hiking&quot;, }) # Appends my mother&#39;s info InfoDb.append({ &quot;FirstName&quot;: &quot;Marilyn&quot;, &quot;LastName&quot;: &quot;Wright&quot;, &quot;DOB&quot;: &quot;June 12&quot;, &quot;Highest School&quot;: &quot;San Beda Law School&quot;, &quot;Favorite Course&quot;: &quot;Constitutional Law&quot;, &quot;Occupation&quot;: &quot;Lawyer, Mother&quot;, &quot;Favorite Food&quot;: &quot;Rice&quot;, &quot;Favorite Color&quot;: &quot;Green&quot;, &quot;Favorite Movie&quot;: &quot;&quot;, &quot;Favorite Activity&quot;: &quot;&quot;, }) # Appends my father&#39;s info InfoDb.append({ &quot;FirstName&quot;: &quot;Leonard&quot;, &quot;LastName&quot;: &quot;Wright&quot;, &quot;DOB&quot;: &quot;June 24&quot;, &quot;Highest School&quot;: &quot;Cal State Fullerton&quot;, &quot;Favorite Course&quot;: &quot;Marketing&quot;, &quot;Occupation&quot;: &quot;CPA, Father&quot;, &quot;Favorite Food&quot;: &quot;Salmon&quot;, &quot;Favorite Color&quot;: &quot;Blue&quot;, &quot;Favorite Movie&quot;: &quot;Gone with the Wind&quot;, &quot;Favorite Activity&quot;: &quot;&quot;, }) # Appends a friend&#39;s info InfoDb.append({ &quot;FirstName&quot;: &quot;Kevin&quot;, &quot;LastName&quot;: &quot;Vu&quot;, &quot;DOB&quot;: &quot;November 2&quot;, &quot;Highest School&quot;: &quot;Del Norte High School&quot;, &quot;Favorite Course&quot;: &quot;&quot;, &quot;Occupation&quot;: &quot;student, &quot;, &quot;Favorite Food&quot;: &quot;&quot;, &quot;Favorite Color&quot;: &quot;&quot;, &quot;Favorite Movie&quot;: &quot;&quot;, &quot;Favorite Activity&quot;: &quot;&quot;, }) # Appends info of John Smith, a fictitious individual InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Smith&quot;, &quot;DOB&quot;: &quot;February 29&quot;, &quot;Highest School&quot;: &quot;UC San Diego&quot;, &quot;Favorite Course&quot;: &quot;Differential Calculus&quot;, &quot;Occupation&quot;: &quot;Professor&quot;, &quot;Favorite Food&quot;: &quot;Beef Stew&quot;, &quot;Favorite Color&quot;: &quot;Red&quot;, &quot;Favorite Movie&quot;: &quot;Star Wars: The Empire Strikes Back&quot;, &quot;Favorite Activity&quot;: &quot;Swimming&quot;, }) # We&#39;re not using the print command anymore because what it spits out is a mess. . Defining a function . Now that I have everything compiled into a nice dictionary, it&#39;s time to demonstrate the power of the loops. But before I do that, I&#39;ll define a function to make life easier. I&#39;ll name it print_data. That way, I can call print_data instead of having to re-type all of those print commands. . # This special d_rec parameter essentially references the dictionary we just created. def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) #these t print indents, which are usually inserted with a tab. print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Highest School:&quot;, d_rec[&quot;Highest School&quot;]) print(&quot; t&quot;, &quot;Occupation:&quot;, d_rec[&quot;Occupation&quot;]) print(&quot; t&quot;, &quot;Favorite Course:&quot;, d_rec[&quot;Favorite Course&quot;]) print(&quot; t&quot;, &quot;Favorite Food:&quot;, d_rec[&quot;Favorite Food&quot;]) print(&quot; t&quot;, &quot;Favorite Color:&quot;, d_rec[&quot;Favorite Color&quot;]) print(&quot; t&quot;, &quot;Favorite Movie:&quot;, d_rec[&quot;Favorite Movie&quot;]) print(&quot; t&quot;, &quot;Favorite Activity:&quot;, d_rec[&quot;Favorite Activity&quot;]) print() print() . The For Loop . Now that the function is defined, I can demonstrate the first loop: the for loop. . # It will execute this set of commands for each individual # who&#39;s information is stored in InfoDb # InfoDb is a dictionary in a list. def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: #index variable is &quot;record&quot; print_data(record) for_loop() . For loop output Leonard Wright Birth Day: December 13 Highest School: Del Norte High School Occupation: Student Favorite Course: AP Comp Sci Principles Favorite Food: Panko Chicken Favorite Color: Brown Favorite Movie: Back to the Future Favorite Activity: Experimenting with Computers Lindsay Wright Birth Day: December 3 Highest School: Rice University Occupation: Student, Research Intern, Systems Engineer Favorite Course: Fluid Mechanics Favorite Food: Wonton Favorite Color: Green Favorite Movie: The Martian Favorite Activity: Hiking Marilyn Wright Birth Day: June 12 Highest School: San Beda Law School Occupation: Lawyer, Mother Favorite Course: Constitutional Law Favorite Food: Rice Favorite Color: Green Favorite Movie: Favorite Activity: Leonard Wright Birth Day: June 24 Highest School: Cal State Fullerton Occupation: CPA, Father Favorite Course: Marketing Favorite Food: Salmon Favorite Color: Blue Favorite Movie: Gone with the Wind Favorite Activity: Kevin Vu Birth Day: November 2 Highest School: Del Norte High School Occupation: student, Favorite Course: Favorite Food: Favorite Color: Favorite Movie: Favorite Activity: John Smith Birth Day: February 29 Highest School: UC San Diego Occupation: Professor Favorite Course: Differential Calculus Favorite Food: Beef Stew Favorite Color: Red Favorite Movie: Star Wars: The Empire Strikes Back Favorite Activity: Swimming . I first define the for_loop function. It prints the string in parenthesis to the terminal. Then: . for record in InfoDb: . for has a function: it cycles through all items in a list, and for each cycle the commands associated with the loop are executed. Keep in mind that InfoDb is a list of dictionary entires, and the items in this list are each person (ex: Leonard Wright, Lindsay Wright), etc. . record serves as an index variable. Index variables can be named anything, but have a very specialized function. They work with a loop (whether this be a for loop, a while loop, or a recursive loop) to iterate through each item in a list. There is a nuance to index variables: they assign a value to each item in a list, but it starts counting from 0 rather than 1 (since 0 is the number with the least value). So the first entry in the list will be associated with 0, etc. This nuance will be important in explaining the while loop. . print_data(record) then prints the information of each user. Keep in mind the index variable record. . If you really want another example and explanation of a for loop, you should check out my first python quiz script. . The While Loop + Backwards output . You already saw the output of my for loop. I will now demonstrate a while loop while reversing the output of the list. . def while_loop(): print(&quot;While loop output n&quot;) i = len(InfoDb) - 1 #Starts on last entry while i &gt; -1: #Ensures the first entry (where i = 0) is printed record = InfoDb[i] print_data(record) i -= 1 #Goes to previous entry (rather than next entry) return while_loop() . While loop output John Smith Birth Day: February 29 Highest School: UC San Diego Occupation: Professor Favorite Course: Differential Calculus Favorite Food: Beef Stew Favorite Color: Red Favorite Movie: Star Wars: The Empire Strikes Back Favorite Activity: Swimming Kevin Vu Birth Day: November 2 Highest School: Del Norte High School Occupation: student, Favorite Course: Favorite Food: Favorite Color: Favorite Movie: Favorite Activity: Leonard Wright Birth Day: June 24 Highest School: Cal State Fullerton Occupation: CPA, Father Favorite Course: Marketing Favorite Food: Salmon Favorite Color: Blue Favorite Movie: Gone with the Wind Favorite Activity: Marilyn Wright Birth Day: June 12 Highest School: San Beda Law School Occupation: Lawyer, Mother Favorite Course: Constitutional Law Favorite Food: Rice Favorite Color: Green Favorite Movie: Favorite Activity: Lindsay Wright Birth Day: December 3 Highest School: Rice University Occupation: Student, Research Intern, Systems Engineer Favorite Course: Fluid Mechanics Favorite Food: Wonton Favorite Color: Green Favorite Movie: The Martian Favorite Activity: Hiking Leonard Wright Birth Day: December 13 Highest School: Del Norte High School Occupation: Student Favorite Course: AP Comp Sci Principles Favorite Food: Panko Chicken Favorite Color: Brown Favorite Movie: Back to the Future Favorite Activity: Experimenting with Computers . So we first define a function and print how there&#39;s output... . Then you notice that i is defined. The len(list_name) command will become the number of entries in the list named list_name. Now, let me paste the actual line. . i = len(InfoDb) - 1 . Noticed how I subtracted 1 from the len(InfoDb)? Well that&#39;s because the final entry in the list will have a value one less than the number of entries in the list, since the first entry is assigned a 0 instead of a 1. You will see that the next line of code takes this into account as well. This also means that we will print the final entry of the list first. . while i &gt; -1: . The while command will execute all associated commands as long as a statement is true. When iterating through lists, this typically involves setting the index variable (in this case, i) equal to a value, then adding a value until it reaches a value such that all entries in a list have been cycled through the commands. The condition is typically that i is less than or greater than a certain value. Now notice that my condition is that i is greater than negative one. This is because I want my first entry of the list, where i is set to 0, to print. Then, . record = InfoDb[i] print_data(record) i -= 1 . This makes a record variable, which is equal to entry i (whatever value i is for that execution cycle is). It then executes the print_data function on that entry of the list of dictionaries. Finally, the value of i decreases by 1. This ensures that the entry in the list before the previously printed entry is printed next. This essentially makes it so the entries are printed backwards. . Recursive Loops . Recursive loops are quite similar to while loops in terms of structure. What is interesting about them is that a function is defined, and the list of commands within the function includes the function. . Now, I will also try to do something fun. I will try to randomize the order which the entries in the list are printed. The nature of the command which randomizes entry order overrides the list the command is performed on. I wish to preserve the original list, so I&#39;ll make a copy of the original list. . import random # makes copy of InfoDb list InfoDb_random = InfoDb # randomizes order of entries in InfoDb_random random.shuffle(InfoDb_random) #The actual recursive loop starts here def recursive_loop(i): if i &lt; len(InfoDb_random): record = InfoDb_random[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Lindsay Wright Birth Day: December 3 Highest School: Rice University Occupation: Student, Research Intern, Systems Engineer Favorite Course: Fluid Mechanics Favorite Food: Wonton Favorite Color: Green Favorite Movie: The Martian Favorite Activity: Hiking Leonard Wright Birth Day: December 13 Highest School: Del Norte High School Occupation: Student Favorite Course: AP Comp Sci Principles Favorite Food: Panko Chicken Favorite Color: Brown Favorite Movie: Back to the Future Favorite Activity: Experimenting with Computers John Smith Birth Day: February 29 Highest School: UC San Diego Occupation: Professor Favorite Course: Differential Calculus Favorite Food: Beef Stew Favorite Color: Red Favorite Movie: Star Wars: The Empire Strikes Back Favorite Activity: Swimming Kevin Vu Birth Day: November 2 Highest School: Del Norte High School Occupation: student, Favorite Course: Favorite Food: Favorite Color: Favorite Movie: Favorite Activity: Marilyn Wright Birth Day: June 12 Highest School: San Beda Law School Occupation: Lawyer, Mother Favorite Course: Constitutional Law Favorite Food: Rice Favorite Color: Green Favorite Movie: Favorite Activity: Leonard Wright Birth Day: June 24 Highest School: Cal State Fullerton Occupation: CPA, Father Favorite Course: Marketing Favorite Food: Salmon Favorite Color: Blue Favorite Movie: Gone with the Wind Favorite Activity: . I hope the comments were enough to explain everything but the recursive loop. . def recursive_loop(i): if i &lt; len(InfoDb_random): record = InfoDb_random[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . In the first line, we define our recursive_loop. Notice that the parameter is the index variable, i | In the second line, we give an if statement. The condition is that i is less than the number of entries in the list InfoDb_random, or that not all entries in the list have been cycled through the loop. This should show you that we are cycling the entries in order of first, second, third... then last. Also remember that the order of entries of InfoDb_random are a randomized version of that of InfoDb. | Makes a record variable, which is set equal to the entry in the InfoDb_random list which is associated with the value of i | Executes the print_data function with record (or an entry in the list InfoDb_random) as the parameter | The function calls itself, essentially looping back to the top of the list of associated commands, but adding 1 to the index variable. | return stores all the output in the main script so that it can be used outside of the function | Then notice the recursive_loop(0). It tells the script to start with i=0, or essentially the first entry in InfoDb_random . Making a Quiz using a List of Dictionaries! . You probably saw my first python quiz. All the questions were collected onto a single list, which ultimately made that list a very long line. That&#39;s messy and disorganized. Let&#39;s use a list of dictionaries to make it more organized. But first, let&#39;s define the list, or the questions and answers... and the function, question_with_response. . import time, random #Makes a new list for our quiz QuizDB = [] #Appends all the quiz questions into our list. #This quiz will be a relatively simple geography quiz. #Notice that I use the database_name.append. QuizDB.append({ &quot;Country&quot;: &quot;Uruguay&quot;, &quot;Continent&quot;: &quot;South America&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;Austria&quot;, &quot;Continent&quot;: &quot;Europe&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;United Arab Emirates&quot;, &quot;Continent&quot;: &quot;Asia&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;Sweden&quot;, &quot;Continent&quot;: &quot;Europe&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;Tanzania&quot;, &quot;Continent&quot;: &quot;Africa&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;Yemen&quot;, &quot;Continent&quot;: &quot;Asia&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;Mauritania&quot;, &quot;Continent&quot;: &quot;Africa&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;Peru&quot;, &quot;Continent&quot;: &quot;South America&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;South Korea&quot;, &quot;Continent&quot;: &quot;Asia&quot;, }) QuizDB.append({ &quot;Country&quot;: &quot;Singapore&quot;, &quot;Continent&quot;: &quot;Asia&quot;, }) #Define question_with_response to give question prompts and collect input #As a reminder, print() prints the parameter (in parenthesis) into terminal def question_with_response(prompt): print(&quot;Question: What continent is &quot; + prompt + &quot; in?&quot;) msg = input() return msg . Then I&#39;ll make the quiz. . random.shuffle(QuizDB) #Define variables questions = 10 correct = 0 #I&#39;ll take some personal liberties with the initial prompt print(&quot;Hi! Welcome to my Python Geography quiz! Please capitalize the names of continents.&quot;) print(&quot;You got 15 nanoseconds to prepare for this quiz. Say yes!&quot;) #Disables input and output for 15 seconds. time.sleep(15) #Cycles through the quiz questions for i in QuizDB: rsp = question_with_response(i[&quot;Country&quot;]) if rsp == i[&quot;Continent&quot;]: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect! The answer was&quot;, i[&quot;Continent&quot;]) #Calculates percent correct answers. percent = (correct/questions) * 100 #Prints accuracy of answers to terminal print(&quot;You scored &quot; + str(percent) + &#39;%!&#39;) . Hi! Welcome to my Python Geography quiz! Please capitalize the names of continents. You got 15 nanoseconds to prepare for this quiz. Say yes! Question: What continent is Singapore in? Asia Asia is correct! Question: What continent is Sweden in? Europe Europe is correct! Question: What continent is Yemen in? Asia Asia is correct! Question: What continent is South Korea in? Asia Asia is correct! Question: What continent is Uruguay in? South America South America is correct! Question: What continent is Mauritania in? Africa Africa is correct! Question: What continent is United Arab Emirates in? Asia Asia is correct! Question: What continent is Austria in? Europe Europe is correct! Question: What continent is Peru in? South America South America is correct! Question: What continent is Tanzania in? . I think the code that needs the most explaining here is the for loop. I&#39;ll bring it down here. . for i in QuizDB: rsp = question_with_response(i[&quot;Country&quot;]) if rsp == i[&quot;Continent&quot;]: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect! The answer was&quot;, i[&quot;Continent&quot;]) . Line 1: For each entry in the list of dictionaries QuizDB, the associated commands will be executed | Make a rsp variable. It is set equal to the input garnered from the question_with_response function. Notice the parameter of question_with_response is i[&quot;country&quot;]. i is the index variable. For the current associated item in the list, the string associated with &quot;Country&quot; will be used as the parameter to question_with_response | An if statement with the condition that the input collected is equal to the string associated with &quot;Continent&quot; for that list. The string associated with &quot;Continent&quot; in this case is the correct answer, or the continent that the associated country is in. | If the condition is satisfied, then the fact that the answer was correct is outputted to the terminal and | The variable correct (which is the number of questions answered correctly) is increased by one | An else statement (if the if condition is not satisfied, associated commands are executed) | prints to the terminal that the question was answered incorrectly, and also shows the correct answer. | Append to a list with user input . There is one more thing I want to do for hacks, and that is appending to a list with user input. From my experience, collecting variables will be very helpful. I will be appending to the QuizDB list to make things simpler. Let me demonstrate below: . def append_input(): print(&quot;Do you want to add a new country/continent question? [y/n]&quot;) yesno = input() #Starts appending sequence if yesno == &quot;y&quot;: print() print (&quot;What country do you want to append?&quot;) country_app = input() print() print(&quot;What continent do you want to append?&quot;) continent_app = input() QuizDB.append({ &quot;Country&quot;: f&quot;{country_app}&quot;, &quot;Continent&quot;: f&quot;{continent_app}&quot;, }) print() append_input() #exits function if n is given elif yesno == &quot;n&quot;: return #Prevents issues if initial input was something other than y or n. #Re-executes the first command else: append_input() append_input() . Do you want to add a new country/continent question? [y/n] a Do you want to add a new country/continent question? [y/n] s Do you want to add a new country/continent question? [y/n] y What country do you want to append? United States What continent do you want to append? North America Do you want to add a new country/continent question? [y/n] y What country do you want to append? Japan What continent do you want to append? Asia Do you want to add a new country/continent question? [y/n] y What country do you want to append? Ukraine What continent do you want to append? Europe Do you want to add a new country/continent question? [y/n] y What country do you want to append? Mexico What continent do you want to append? Europe Do you want to add a new country/continent question? [y/n] y What country do you want to append? Atlantis What continent do you want to append? Atlantic Ocean Do you want to add a new country/continent question? [y/n] y What country do you want to append? Tennessee What continent do you want to append? United States Do you want to add a new country/continent question? [y/n] n . Notice that you can input anything into the list, including fictitious places or incorrect information. This python code does not know fact from fiction. It will just store whatever you give it. That&#39;s how it works. . Now, I didn&#39;t put comments on the part where the if statement is satisfied. I did that since that would lead to a bit of confusion with what the associated command are, etc. I&#39;ll paste the commands associated with the if condition right here . if yesno == &quot;y&quot;: print() print (&quot;What country do you want to append?&quot;) country_app = input() print() print(&quot;What continent do you want to append?&quot;) continent_app = input() QuizDB.append({ &quot;Country&quot;: f&quot;{country_app}&quot;, &quot;Continent&quot;: f&quot;{continent_app}&quot;, }) print() append_input() . Line 1 is the if statement itself. If a user wants to append questions, he/she would have given a y response. | The question of which country to input is then given in the terminal. | Line 4 collects this input and stores it as country_app. app is the first three letters of &quot;append.&quot; | The notice to input the continent is printed into the terminal. This input is collected as continent_app | The inputted information is appended into QuizDB. | Notice how Country is associated with f&quot;{country_app}&quot;. The f, or format command is essentially used to bypass all of those issues with quotation marks. This and the curly brackets allows the value of the input (instead of country_app as a string) to be stored into the dictionary. A similar process is used for continents. | Finally, the function append_input() calls itself again to give the user a chance to input another country/continent set. | . Now, to test to see that the information is actually appended, we will take the quiz... again! And see me &quot;mess up&quot; on all the questions I intentionally misconfigured. . random.shuffle(QuizDB) #Define variables questions = 0 correct = 0 #Cycles through the quiz questions for i in QuizDB: questions += 1 rsp = question_with_response(i[&quot;Country&quot;]) if rsp == i[&quot;Continent&quot;]: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect! The answer was&quot;, i[&quot;Continent&quot;]) #Calculates percent correct answers. percent = (correct/questions) * 100 #Prints accuracy of answers to terminal print(&quot;You scored &quot; + str(percent) + &#39;%!&#39;) . Question: What continent is Tennessee in? North America North America is incorrect! The answer was United States Question: What continent is United States in? North America North America is correct! Question: What continent is Peru in? South America South America is correct! Question: What continent is South Korea in? Asia Asia is correct! Question: What continent is Mexico in? North America North America is incorrect! The answer was Europe Question: What continent is Yemen in? Asia Asia is correct! Question: What continent is Atlantis in? what what is incorrect! The answer was Atlantic Ocean Question: What continent is Singapore in? Asia Asia is correct! Question: What continent is Japan in? Asia Asia is correct! Question: What continent is Tanzania in? Africa Africa is correct! Question: What continent is United Arab Emirates in? Asia Asia is correct! Question: What continent is Sweden in? Europe Europe is correct! Question: What continent is Mauritania in? Africa Africa is correct! Question: What continent is Ukraine in? Europe Europe is correct! Question: What continent is Austria in? Europe Europe is correct! Question: What continent is Uruguay in? South America South America is correct! You scored 81.25%! . There was one notable change I made. I initially set the questions variable to 0, and automated the increase of the question variable. See the for loop: . for i in QuizDB: questions += 1 rsp = question_with_response(i[&quot;Country&quot;]) if rsp == i[&quot;Continent&quot;]: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect! The answer was&quot;, i[&quot;Continent&quot;]) . Notice that the first command associated with the for loop is increasing the value of questions by 1. That way, the number of questions is automated and I don&#39;t have to count to make a pre-set value. .",
            "url": "https://leonard514.github.io/FastPage/scripts/loop_scripts",
            "relUrl": "/scripts/loop_scripts",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Week 1 Review Ticket",
            "content": "Hi! . This is part of the Week 1 Review Ticket. If you came here, I hope you came here from the github issue. If not, please take a look right here. That being said, if you missed where the python, bash, and personal development submission parts are, they are in this list! . Python! | Bash! | Personal Development! | . Anyways, if you came from the github issue, you are probably here for the fastpages/web development part of the submission. That part of the submission is too complex to just stick a single link in the title without a dedicated post, so here’s to the changes! . Changes!!! . If you go back to the homepage, you may notice that the majority of the posts have vanished (with the exception of some word files and the weekly review tickets). This is intentional. The posts column would be far too messy if every markdown page and every jupyter notebook file I uploaded to the site landed in the column. The way I did this was to add the hide: true option to the front matter of all of my notebooks and markdown files (with the exception of the review tickets). I also added that to word_front_matter.txt in the action files, but unfortunately it doesn’t want to cooperate with me. So there are word files in the posts column. Sorry about that. . But how will I find all of your posts and notebooks? Well, for that you can refer to the search page if you want to look up a specific phrase, or go to the tags page! The tags page will provide a much better framework for organizing all of my notebook files and markdown files. And of course if you really need to go back and view a file I used for submission, go to my issues page! I won’t close any issues until the year ends. . However, I still have to add what I did. If you looked at my python and bash hacks, those serve as the .ipynb jupyter notebook files I added to the site. I also have a very comprehensive notes page in the taskbar (notice it’s between the tags and about me pages). In addition, I added two markdown posts for my Calc BC Class. One has multiple images of some fundamental concepts, while the other is a guide for showing work (since there are a lot of nuances in that class). As for my word files, those come from my English class. There are: . Directions to writing an Op-Ed | An Op-Ed Rubric | . How come I didn’t put that many files here? Because I’m smart enough to realize that if I put any turned-in assignments here that there’s the risk of someone copying my work… and what happens afterwards is nasty. . Now, here’s a table of my daily progress . Date Activities completed . August 22 | Review Ticket shown | . August 23 | Sent email to Mr. Yeung about concerns in working in groups (a partner was taking up my time with needing help getting set up). He gave me some very helpful tips. During class, I also learned to open jupyter notebooks in a web browser. Took notes on the “good life” video very late in the night. | . August 24 | Started the python script at this point. Was a little confused. | . August 25 | Started the bash script. I was confused. Finished the python vocabulary notes and made my first for loop in the python quiz! Uploaded files for other courses into fastpages. | . August 26 | Removed an if statement in the tags page which excluded pages with the hide: true front matter (this was to organize my fast page). Uploaded files for other courses into fastpages. | . August 28 | Finished bash script test. Added comment functionality to the majority of my files. Dealt with issues in image integration of notebooks and word file issues (ongoing) | . Remaining tasks . Tags in word files (I do have the categories in the word front matter file, but it’s not working for some reason.) | .",
            "url": "https://leonard514.github.io/FastPage/submissions/Week_1_Submission",
            "relUrl": "/submissions/Week_1_Submission",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "BC Procedures",
            "content": "Gotta Knows . (Know them.)[https://leonard514.github.io/FastPage/classes/BC/gotta_know] . Writing your work: Arrows . When showing work, minimize arrows. Instead attempt to stick to a up to down model, then left to right. . Using methods taught in class . When solving a problem, you are only allowed to use methods taught in class. This is likely to avoid any misconceptions about those methods not covered yet, although this does turn many of the problems into a game of whether the concept is prohibited since it wasn’t covered or if it should be used since it’s being introduced. . Writing the domain . Write the domain in interval notation. So instead of using -1 &lt; x &lt; 1, use (-1,1). Do this even if a single value is excluded from the domain. For example, if x=1 is excluded from the domain, write as (-∞,1)u(1,∞). Also, you have to use the u. Writing (-∞,1),(1,∞) is incorrect notation… since that’s the way it was written. . Limits and grouping symbols . If there is addition/subtraction going on in the rule of the limit which is not modified by multiplication/division, there must be grouping symbols (parenthesis) around the entire rule. This is to ensure clarity of what function is taken to the limit. Outside of this, grouping symbols are optional. . Limits and known rules . If the rule of a limit is known, it should be written out in full form (ex: x+1) rather than in f(x) form. f(x) form is usually only OK when given a graph of that function. . One-sided limits . One sided limits should always have the +/- superscripts of whatever value x is approaching. . Direct Substitution fails due to division by zero: not indeterminate . If a direct substitution fails due to division by zero, and the numerator is not zero, do not skip ahead to Does not Exist (infinity or negative infinity). You must first take the left and right limits, and if the infinities have the opposite signs (like in 1/x), then the Does not Exist reasoning is actually that the left limit is not equal to the right limit. . Direct Substitution: infinity . If there is a limit as x approaches infinity, do not directly substitute infinity like it is a variable or a number, because it is neither of those. . Piecewise Functions: Conventions . When listing a piecewise function, the piece with the least domain is listed first, and the piece with the greatest domain last. As for the domains, there will always be a greater than/equal to, and never a less than/equal to. That is, the lower bound of the domain (if not negative infinity) is included, and the upper bound is excluded. Also, when stating the domain, x always has to be listed first if it is strictly less than a value or strictly greater than a value (ex: x &lt; 4, NOT 4 &gt; x). This is likely in place to establish consistency in defining piecewise functions. . Squeeze Theorem: Sign of appended functions . When using the squeeze theorem on a limit, any appended functions/actions (like x+1, or taking the reciprocal of all terms) must have their signs checked for the x being approached. . If the sign is negative, the inequality signs must be flipped in the first step, and in the second step the terms must be re-ordered from least to greatest. | Taking the reciprocal of all terms flips the inequality signs since the least term becomes the greatest (since it has the least denominator) and the greatest term becomes the least (with the greatest denominator). | If the sign of an appended function is zero, there must be two squeeze theorem sequences performed for approaching x from the left and right sides to account for the two sides of a limit (and the effect of signs on the inequality signs). | . Using a creative one . When there is two of the same term on the denominator, there is a creative one. The term functions as a 1 within the function and has a singular effect: creating a removeable discontinuity (hole) where x causes a 0/0. There is no “canceling” of terms since the terms still play a role. When the terms become one, write ones on them. . Using a unique creative one as part of a limit to infinity/negative infinity . When taking a limit to infinity/negative infinity and an indeterminate result is yielded(infinity over infinity… and the like), it is possible to multiply the entire rule by a unique creative one. Typically, this will involve multiplying both sides of the fraction by something like (1/x^2). There are special parameters, however. The denominator must not equal zero, and its limit must also exist. This essentially means in general cases, we multiply by (1/x^a), where a is the greatest power an x in the denominator is raised to. Occasionally, both sides of the fraction will be multiplied by (1/sqrt(x^2)) or some other root of a polynomial. This can happen if one side of the fraction is under a root (and the other isn’t). In this case, the side under the root can have x^2 divided as normal, but the other side of the fraction must take into account that sqrt(x^2) is the absolute value of x, which is a piecewise function. Any roots which start out being even roots but having odd powers at the end will deal with absolute value. The sign of that part of the creative one then depends on what x is approaching (can be positive/negative depending on which piece’s domain the value x is approaching falls on). . Now, what I haven’t seen yet is the x approaching the value of the piecewise function where x=0. It is very difficult to guess how I would be expected to react to this. It is likely I will be asked to go with the piece where the non-opposite function in the absolute value is so that I can follow conventions. . Limit of a composite function . There are times when you are asked to take the limit of f(g(x)) as x approaches c. There are two approaches you can take for this limit . Limit inside composite function: to use this strategy, you must first verify that g(x) is continuous at x=c, and that f(x) is continuous at x=g(c). If this works, then f(g(x)) is continuous and lim(f(g(x))) = f(lim(g(x))). If this is not the case, you must use a different method. The use of this different method is likely to prevent writing infinity/negative infinity as a number/variable, and/or to circumvent complications if there is a hole or if the function’s output at a certain point is not equal to the limit (in which case f may be undefined or output the wrong value, since this is a limit we’re taking (not where the function f is defined)) | Input-output method: this accounts for the fact that as the definition of a composite function f(g(x)), x serves as the input to g(x), and the output serves as the input to f(x), which then gives the final input. To do this, show a separate step where the limit of the inside function is taken (as x approaches c, g(x) approaches [value]). Then, take the limit as the inside function approaches the limit you calculated, and write out f(g(x)) as usual. That inside function is your input to f. Then, get your solution. | Definition of differentiability . Differentiability is not the same thing as continuity. Differentiability is defined as when the limit that serves as the definition of the derivative exists. Nothing more. .",
            "url": "https://leonard514.github.io/FastPage/classes/BC/procedures",
            "relUrl": "/classes/BC/procedures",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "BC Gotta Knows!",
            "content": "Special Trig Limits + Squeeze Theorem . . Continuity Definition . . Continuity Properties + Composite Continuity . . Differentiability Definition . .",
            "url": "https://leonard514.github.io/FastPage/classes/BC/gotta_know",
            "relUrl": "/classes/BC/gotta_know",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Bash Test Script!",
            "content": "Hi! Welcome to my first bash notebook. There will be two scripts featured here: An installation verification script and a github updating script. Below is the installation verification script. . Check Installation Script . # The bullet of updating a repository is addressed in the next script below #uses basic version commands echo Basic Python Installation Check python --version python2 --version echo &quot;&quot; echo &quot;&quot; #uses basic version commands echo Basic Conda Installation Check conda --version echo &quot;&quot; echo &quot;&quot; #uses basic version commands echo Basic Jupyter Installation check jupyter --version echo &quot;&quot; echo &quot;&quot; echo Basic Checks Complete echo &quot;&quot; #sets up variables to check conda installation. echo Check Conda Installation using Conda conda=&quot;conda&quot; checkconda=$(conda list | grep $conda) nconda=$(echo &quot;$checkconda&quot; | wc -l ) #checks if conda is there or if the grep command had output if [[ $nconda &gt; 0 ]]; then echo &quot;$conda found!&quot; echo &quot;&quot; echo &quot;&quot; echo &quot;$checkconda&quot; # If there&#39;s no conda... installs conda and exits the script so the base prompt appears. else echo &quot;$conda not found. Installing so the script doesn&#39;t break!&quot; echo &quot;&quot; echo &quot;&quot; cd /tmp wget https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh chmod +x Anaconda3-2022.05-Linux-x86_64.sh echo &quot;Make sure that you reply yes to the final prompt about the conda (the default is no).&quot; echo &quot;After this, the script will exit and you must reload Windows Subsystem Linux to make sure the base prompt is present.&quot; echo &quot;Then, run this script again.&quot; ./Anaconda3-2022.05-Linux-x86_64.sh exit fi echo &quot;&quot; echo &quot;&quot; #sets up variables to check jupyter installation with conda echo Check Jupyter Installation using Conda jupyter=&quot;jupyter&quot; checkjupyter=$(conda list | grep $jupyter) njupyter=$(echo &quot;$checkjupyter&quot; | wc -l ) #checks if jupyter is present if [[ $njupyter &gt; 0 ]]; then echo &quot;$jupyter found!&quot; echo &quot;&quot; echo &quot;&quot; echo &quot;$checkjupyter&quot; # jupyter not present, installs jupyter else echo &quot;$jupyter not found, installing&quot; echo &quot;&quot; echo &quot;&quot; conda install jupyter fi echo &quot;&quot; echo &quot;&quot; #sets up variables to check python with conda echo Check Python Installation using Conda python=&quot;python&quot; checkpython=$(conda list | grep $python) npython=$(echo &quot;$checkpython&quot; | wc -l) #checks if python is present if [[ $npython &gt; 0 ]]; then echo &quot;$python found!&quot; echo &quot;&quot; echo &quot;&quot; echo &quot;$checkpython&quot; # No python, installs python and related stuff else echo &quot;$python not found, installing!&quot; echo &quot;&quot; echo &quot;&quot; sudo apt install python2 python3 python3-pip pip install bash_kernel python -m bash_kernel.install conda list | grep $python jupyter kernelspec list fi . Basic Python Installation Check Python 3.9.12 Python 2.7.18 Basic Conda Installation Check conda 4.13.0 Basic Jupyter Installation check Selected Jupyter core packages... IPython : 8.4.0 ipykernel : 6.15.1 ipywidgets : not installed jupyter_client : 7.3.4 jupyter_core : 4.11.1 jupyter_server : not installed jupyterlab : not installed nbclient : not installed nbconvert : not installed nbformat : not installed notebook : not installed qtconsole : not installed traitlets : 5.3.0 Basic Checks Complete Check Conda Installation using Conda conda found! # packages in environment at /home/leonardw48247/anaconda3: anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 Check Jupyter Installation using Conda jupyter found! jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 Check Python Installation using Conda python found! ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 msgpack-python 1.0.2 py39hff7bd54_1 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 . Github Script . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section for setting project directory, the folder where the repository will be imported, and importation of repository export project_dir=/mnt/c/project_repository export project=$project_dir/FastPage export project_repo=&quot;https://github.com/Leonard514/FastPage.git&quot; cd ~ # start in home directory # Conditional block to make a project directory... if it doesn&#39;t exist yet if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exist... making directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exist... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; # This is meant to export a local repository to GitHub (online) cd $project . Using conditional statement to create a project directory and project Directory /mnt/c/project_repository does not exist... making directory /mnt/c/project_repository Directory /mnt/c/project_repository exists. Directory /mnt/c/project_repository/FastPage does not exist... cloning https://github.com/Leonard514/FastPage.git Cloning into &#39;FastPage&#39;... remote: Enumerating objects: 1780, done. remote: Counting objects: 100% (1578/1578), done. remote: Compressing objects: 100% (606/606), done. remote: Total 1780 (delta 828), reused 1428 (delta 761), pack-reused 202 Receiving objects: 100% (1780/1780), 14.78 MiB | 13.10 MiB/s, done. Resolving deltas: 100% (858/858), done. Directory /mnt/c/project_repository/FastPage exists. . Slack Check Complete! . And this? Just to let you know I have slack installed. . # test for a kernel installation test=“python3” # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo “$check” else # less than zero echo “$check” fi . Still don&#39;t believe me? Well this should change your mind. .",
            "url": "https://leonard514.github.io/FastPage/scripts/bash_test",
            "relUrl": "/scripts/bash_test",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Writing An Op Ed Piece",
            "content": "Writing an Op-Ed Piece . Requirements: . - 400-800 words, typed, (Copy submitted to teacher must be double-spaced, MLA format) . - Due Tuesday 9/6 at midnight . - You must choose an actual newspaper/journal to submit your piece to. See theopedproject.org for a list of possibilities. Identify the specific publication that you are submitting to on your piece. . - Clearly defined subject matter that engages reader with opening . - Distinct and plausible recommendations for action and change (failure to do this will result in a full grade level dock) . - Acknowledgment of opposing point of view . - Vibrant word choice reflective of personal voice and writer’s ethos. . According to The Wall Street Journal: Your article should be a strong argument about an issue in the news. It should not be a response to a Journal article; that is a letter to the editor. So this means that you should choose something about which you are passionate. . Please visit http://www.theopedproject.org/ for further resources . According to Duke University: . - Track the news and jump at opportunities. . - Make a single point — well. . - Put your main point on top. . - Tell readers why they should care. . - Offer specific recommendations. . - Showing is better than discussing. . - Embrace your personal voice. . - Play up your personal connection to the readers. . - Use short sentences and paragraphs. . - Avoid jargon. . - Use the active voice. . - Avoid tedious rebuttals. . - Acknowledge the other side. . - Make your ending a winner. . - Relax and have fun. . - Don’t worry about the headline. . - Offer graphics. .",
            "url": "https://leonard514.github.io/FastPage/word/2022/08/25/Writing-an-Op-Ed-Piece.html",
            "relUrl": "/word/2022/08/25/Writing-an-Op-Ed-Piece.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Op Ed Rubric",
            "content": "Traits 6 . (A+) . 5 . (A-/B+) . 4 . (B) . 3 . (C) . 2 . (D) . 1 . (F) . . Ideas | Clearly stated insightful claim outlining argument with well chosen quotes from reputable sources. . Demonstrates a thorough critical understanding of the issue. Explores the topic thoughtfully, acknowledges opposing points of view, and makes excellent use of the rhetorical strategies discussed in class. . | Clear argument statement and necessary supporting quotations that are cited correctly. . Demonstrates critical understanding of the issue. Explores issues well, acknowledges opposing points of view and makes strong use of rhetorical strategies discussed in class. . | Clear claim statement but it may lack depth. May not always include best quotations or may use obvious quotations. Demonstrates clear understanding of the issue. Explores the issues of this topic, may have implicit acknowledgment of opposing points of view, and successfully uses rhetorical strategies discussed in class. | Claim statement is too broad. Quotations are minimal or poorly chosen. Demonstrates some understanding of the issue. Explores some issues, implicit or missing acknowledgment of opposing points of view, and makes some use of the rhetorical strategies discussed in class. | Claim statement is unclear or simple &amp;/ more quotations are needed. Understanding of issue is shallow or not clearly demonstrated. Implicit or missing acknowledgment of opposing points of view Makes very little use of rhetorical strategies discussed in class. | The essay needs a claim statement and details. Understanding of the issue/articles is extremely limited or nonexistent. No use of rhetorical strategies discusses in class. | . Organization | Response is coherent, well focused and logical. The response contains logical structure that guides the reader and a conclusion which insightfully summarizes argument presented. Includes distinct and plausible recommendations for action and change. Order of information presented is compelling to read. . | Response is focused and logical. The response contains topic sentences which guide the reader and a conclusion which summarizes the argument presented. Includes plausible recommendations for action and change. The order in which the information is presented is successful.. | Response is focused on argument. The response contains topic sentences that guide the reader and a conclusion which loosely summarizes the argument. Includes recommendations for action and change but may not be as specific or plausible. The order in which the information is presented is appropriate | Response is somewhat focused on the argument. The response contains topic sentences and a short or inadequate conclusion. Missing or underdeveloped recommendations for action and change. The order in which the information is presented may confuse the reader. | Response is poorly focused on the argument, if at all. Topic sentences that are present are poorly written and if conclusion is present it is weak. Missing or underdeveloped recommendations for action and change The order in which the information is presented is confusing. | Response lacks logical organization. Topic sentences are nonexistent/ a conclusion may be missing. Missing recommendations for action and change. | . Voice | Voice expresses interest &amp; complete understanding of topic. Engages reader with a reason to care through unique personal perspective evident through use of compelling ideas, engaging language, and relevant details. Appropriate for purpose &amp; audience. . | The voice expresses interest in and understanding of the topic. Shows personal connection to topic and audience. Uses some compelling engaging language to meet the purpose of the assignment. | The voice expresses interest but needs to show more understanding. While the voice does engage the reader, it lacks a consistent personal connection. Has some engaging language but could use more | The voice needs to be more interesting and express more understanding. Reader questions the personal connection of the author. Language is not vivid or engaging | The voice does not show and interest in or understanding of the topic. There is little, to no, personal connection to the author in the voice or writing. | The writer needs to understand how to create a voice. | . Word Choice | Reflects careful thinking about subject. Words are rich, colorful, &amp; precise. Uses specific details to show ideas instead of tell. Words energize writing. Language moves &amp; enlightens the reader. Vocabulary striking, varied. Strong active verbs dominate. Verb tense shifts are correct. | The word choice creates a clear message. Broad range of words that are carefully chosen. Word choices energize writing. Vocabulary varied. Active verbs throughout the essay. Verb tense shifts are correct. | The word choice is appropriate and functional. The words work but might not energize the writing. Attempts at colorful language may be overdone. May include some passive verbs. Verb tense mostly correct. | The word choice is too general and uses many familiar words and phrases. Expression is mundane. Words work but do not capture interest. Passive verbs and linking verbs may dominate. May include many verb tense errors. | Words are colorless, flat, imprecise. . Monotonous repetition. Images are fuzzy or absent. Many passive verbs and linking verbs. Many verb tense errors. . | Limited vocabulary. Words that do not fit text. Words imprecise, wrong. Vague language hides . meaning of message . | . Sentence Fluency | Sentences are skillfully written. Writer consistently uses a variety of sentences. The writing is natural and flows smoothly. Sentences begin with a variety of words. Relatable, accessible language. | The sentences are skillfully written. Writer consistently uses a variety of sentences, fewer than a 6. The writing is natural and flows smoothly. Sentences begin with a variety of words. | The writer uses some variety in sentences. Paper has some rough spots. Not all sentences begin the same. No sentence problems exist. More sentence variety needed. | Writer uses simple sentences. Some sentences are choppy or awkward, but most are smooth and clear. Sentences tend to begin the same. A few sentence problems need to be corrected. | Writer doesn&#39;t use much variety in sentences. Little to no use of linking words to connect sentences. Uses short, repetitive sentence patterns. Has many sentence problems. | The writer needs to learn how to construct sentences. | . Conventions | Grammar &amp; punctuation correct, &amp; copy is free of all errors. Writing is complex enough to show skill in using a wide-range of conventions. All citation are correct and present. Meets word count of 400-800 words. | The essay has one or two errors that do not interfere with the reader’s understanding. . All citation are correct and present. Meets word count of 400-800 words. | The essay has a few careless errors in punctuation and grammar. Most citations are correct and present. May not meet word count of 400-800 words. | The errors in the essay confuse the reader. Most citations are correct and present. May not meet word count of 400-800 words. | The number of errors makes the essay hard to read. Many errors with citations. May not meet word count of 400-800 words. | Help is needed to make corrections. Little to no citations present. May not meet word count of 400-800 words. | .",
            "url": "https://leonard514.github.io/FastPage/word/2022/08/25/Op-Ed-Rubric.html",
            "relUrl": "/word/2022/08/25/Op-Ed-Rubric.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Python Quiz Script!",
            "content": "Hi! I&#39;m here to show you my Python script. But first for the hacks... I got an image and a link. The link is for my vocab table, and the image is below. . . Ok, enough of that. I&#39;ll show you the code in its full beauty first, and if you need help understanding how any part of it works, I&#39;ll explain as thoroughly as I can. . import getpass, sys #defines question and answer: a prompt variable goes in the parenthesis. It essentially spits out user input. def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) #defines question_with_response: collects the questions from a list with prompt, prints it, collects input, and stores it. def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg #variables for number of questions and number of correct answers questions = 10 correct = 0 #initial prompt print(&#39;Hi &#39; + getpass.getuser()) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) #list of questions and answers. Also converts answer list into iteration so next command works. Question_list = [&quot;Is your answer input or output?&quot;, &quot;What command is used to include other functions that are developed?&quot;, &quot;What is the collection of these functions called?&quot;, &quot;What command was used to make the function that gave you this question?&quot;, &quot;what is Answer_list in iter(Answer_list)?&quot;, &quot;What command in this example is used to evaluate a response?&quot;,&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;What type of text is the variable called &#39;correct&#39; in this script?&quot;, &quot;What is it called to print a string (as output) to terminal?&quot;, &quot;What is a group of commands defined under a name?&quot;] Answer_list = [&quot;input&quot;, &quot;import&quot;, &quot;library&quot;, &quot;def&quot;, &quot;parameter&quot;, &quot;if&quot;, &quot;expression&quot;, &quot;dynamic text&quot;, &quot;string concatenation&quot;, &quot;function&quot;] Answer_iter = iter(Answer_list) #cycles through this set of command for each set of question and answer. Also accepts correct answers and rejects bad answers. for i in Question_list: rsp = question_with_response(str(i)) if rsp == str(next(Answer_iter)): print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) #Calculates percent correct answers. percent = (correct/questions) * 100 #Prints accuracy of answers to terminal print(&quot;You scored &quot; + str(percent) + &#39;%!&#39;) . Hi leonardw48247 You will be asked 10 questions. Question: Are you ready to take a test? Answer: Question: Is your answer input or output? input is correct! Question: What command is used to include other functions that are developed? import is correct! Question: What is the collection of these functions called? library is correct! Question: What command was used to make the function that gave you this question? def is correct! Question: what is Answer_list in iter(Answer_list)? parameter is correct! Question: What command in this example is used to evaluate a response? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! Question: What type of text is the variable called &#39;correct&#39; in this script? expression is incorrect! Question: What is it called to print a string (as output) to terminal? string concatenation is correct! Question: What is a group of commands defined under a name? function is correct! You scored 90.0%! . Explanation Portion . Alright... where to start... oh, the import commands would be a good start! . import getpass, sys . This imports the functions getpass and sys into the script, making them executable. Where did those functions come from? They came from the libraries, which is essentially a collection of functions that comes with your python installation. Pretty neat!. Next, we got our own function. . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) . On the first line, we got the def command, which defines our function. The function&#39;s name is question_and_answer (fairly intuitive since it asks you a question and requests for an answer), and there is a prompt in the parenthesis. This prompt is a variable, and whenever this function is called (this should look like question_and_answer(&quot;insert text here&quot;)), the variable prompt is set to whatever is within the parenthesis. The colon is there for syntax purposes and should be kept. | On the second line, the print() command is used. Within the parenthesis is &quot;Question: &quot; to ensure that a question prompt is printed when the file is executed, along with + prompt. The + concatenates/prints whatever text/string is stored in the prompt variable. The output to the terminal is Question: (prompt text here) | On the third line, a variable named msg is set equal to the result of the command input(). As the name implies, the function will collect user input and set it equal to a variable. This also means the script will pause when user input is being collected. | On the fourth line, the print() command is used again, this time with the string Answer: to proceed the text of the variable msg, which was set equal to the input on the third line. | . So to sum it up, this function collects an input string from a user and re-prints it to the terminal. Let&#39;s move on to the other function. . def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg . If you paid attention, the first three lines of this function question_with_response were very similar to the first three lines of the question_with_answer function. The last line is what we want to look at. The return command ends the execution of the function and sends the contents of msg to the main script in execution. The contents of msg can therefore be used outside the function. . questions = 10 correct = 0 . These are more variables. The variable questions lets Python know how many questions there are, because knowledge of how many questions there are is necessary for score calculation. correct, the number of correct answers, is 0 since no questions have been answered yet. . print(&#39;Hi &#39; + getpass.getuser()) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) . The first line prints to the prompt, and this is the first line of code executed. getpass.getuser() is linked to that function we imported at the beginning, and it essentially is a placeholder for the username of the person running the script. Might as well say hi and call the test-taker by his/her name! | The second line prints about being asked questions. str(questions) must be used to print the number of questions since questions is set equal to a number (it must be set equal to a string to print, and the str() command converts it into such). | The third line is our question_and_answer function from before! If you remember what it does, it prints out the prompt in the parenthesis, collects a user input, and prints that input into the prompt. | . Now for the next bit of code! . Question_list = [&quot;Is your answer input or output?&quot;, &quot;What command is used to include other functions that are developed?&quot;, &quot;What is the collection of these functions called?&quot;, &quot;What command was used to make the function that gave you this question?&quot;, &quot;what is Answer_list in iter(Answer_list)?&quot;, &quot;What command in this example is used to evaluate a response?&quot;,&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;What type of text is the variable called &#39;correct&#39; in this script?&quot;, &quot;What is it called to print a string (as output) to terminal?&quot;, &quot;What is a group of commands defined under a name?&quot;] Answer_list = [&quot;input&quot;, &quot;import&quot;, &quot;library&quot;, &quot;def&quot;, &quot;parameter&quot;, &quot;if&quot;, &quot;expression&quot;, &quot;dynamic text&quot;, &quot;string concatenation&quot;, &quot;function&quot;] Answer_iter = iter(Answer_list) . The first two lines are relatively self-explanatory (though lengthy). I made a list called Question_list that has a list of all the questions of the quiz, and Answer_list has all the answers. The first items on the lists will be the ones to appear on the quiz first, but more on that later. The third line is less self-explanatory. I essentially converted my answer list into an iteration. Why would I do that? Well really it&#39;s because there&#39;s a command in the next bit of code that doesn&#39;t work if I don&#39;t convert the list into an iteration. That&#39;s just the way it is. Now it&#39;s time for the exciting part. . for i in Question_list: rsp = question_with_response(str(i)) if rsp == str(next(Answer_iter)): print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) . I know this is a lot to take in. Bear with me for a little while. . The first line is a for loop. The i is a variable used to count how many items are in the related list, Question_list, and how many times the commands within the for loop are executed. You could use any variable, though i is the most common (probably since the word &quot;iteration&quot; starts with an i, though I could be wrong). All commands connected to the for loop (which is this entire chunk of code) is executed once for every question in Question_List. Why would I want to do that? Let&#39;s move to Line 2. | In the second line, we set a rsp variable. We call the question_with_response function, which if you remember prints a question prompt and collects input, sending it to the main script. This input will be set equal to the rsp variable. Notice what is inside the function&#39;s parenthesis: str(i). Remember i is the variable from the for loop which is going over each question in Question_list. So every time this is executed, the prompt will be the next question in the list. | In the third line, there is an if statement. If the condition of the if statement is satisfied, any connected code is executed. In this case, the condition is that the input variable rsp is equal to... let&#39;s deconstruct that code. str(), as mentioned before, turns a number/value into a string. In my tests, the printing of the answer was being picky, so I used this command even though there&#39;s no numbers involved. | next(Answer_iter) is the way that the next answer on the list will be used every time the command is executed. next() moves on to the next item in the iteration whenever executed. For some reason, next() doesn&#39;t accept lists, which is why we made Answer_iter. | . | So back to what I was saying... the condition is that the input variable rsp be equivalent to the correct answer of the question in the prompt. If this condition is satisfied, appropriate code is executed for a correct answer: | In line 4, we print their input (still stored in rsp) and also that it&#39;s correct. | In line 5, we increase the correct variable by one since a correct answer was given. | Line 6 is else. If the condition of the if statement is not fulfilled, any code connected to the else statement is executed instead. That would mean getting a question wrong. | So line 7 prints that the input was incorrect. | . These 7 lines execute 10 times for the 10 questions. Doing this makes the code more concise than typing out the same commands 10 times in a script. Now, the rest of the script should be a breeze. . percent = (correct/questions) * 100 . This line, as implies, calculates the percentage of questions correctly answered. It takes the number of questions correctly answered and divides by total number of questions (these are all variables by the way, which are set equal to values/numbers), then multiplies by 100. This number is set equal to the percent variable. . print(&quot;You scored &quot; + str(percent) + &#39;%!&#39;) . This line prints the percent score. Keep in mind that since the variable percent has a numeric value that the str() command must be used to convert it to a string. . That&#39;s the end of the script! I hope you had a good time learning about how this works, and I hope you will use some of these techniques in your future work. .",
            "url": "https://leonard514.github.io/FastPage/scripts/python_quiz",
            "relUrl": "/scripts/python_quiz",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Week 0 Review Ticket",
            "content": "Hi! . This is a submission for the Tools/Equipment hack. If you want to see index.html, you might as well check out home. . Anyways, better start showing you my stuff. My main github is here. You were probably interested in seeing the insights page as well, so I’ll stick it in here. . Oh yeah, you also wanted to see me using VSCode, which is how I’m writing this page. . VSCODE . . Notebook . And then there’s my Jupyter notebook, which is found at this link. Yeah, I know it has the default title. Going to have to ask around to figure out how that stuff works. . Anyways that’s all the submission-related stuff, but I think it’s also a good idea to keep a journal… of what I’ve done, and what I have left to do. . Here is a table of my progress. . Date Activities completed . August 17 | Class started. Installed VSCode and the windows version of a bunch of programs (oops) | . August 18 | Installed Windows Subsystem Linux. Installed python, jupyter, anaconda, and a lot of other software the way I was supposed to do it. | . August 19 | Fastpages development begins. Created the repository and did basic edits | . August 21 (night) | Fastpages development continues with this post, index.html, and about me. Make the Jupyter notebook. Used VSCode with my fastpages development (including this page) | . Remaining tasks: . Refine the Jupyter Notebook (having a title, markdown integration) | Image integration working fine, although I need a way to control resolution (since some images are massive) | .",
            "url": "https://leonard514.github.io/FastPage/submissions/Week_0_Submission",
            "relUrl": "/submissions/Week_0_Submission",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "A Print Test Script!",
            "content": "print(&quot;Hello World!&quot;) print(&quot;But that&#39;s boring. Let&#39;s try something different&quot;) print(&quot;Supercalifragilisticexpialidocious!!!&quot;) print(&quot;Pneumonoultramicroscopicsilicovolcanoconiosis!!!&quot;) print(&quot;Now that&#39;s better.&quot;) . Hello World! But that&#39;s boring. Let&#39;s try something different Supercalifragilisticexpialidocious!!! Pneumonoultramicroscopicsilicovolcanoconiosis!!! Now that&#39;s better. .",
            "url": "https://leonard514.github.io/FastPage/scripts/print_test",
            "relUrl": "/scripts/print_test",
            "date": " • Aug 22, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Notes",
          "content": "Week 1 Focus and Habits Hack . Video Notes (includes 10 insights) . Origins . She sent a survey about what students thought about Yale culture; students are stressed about being in Yale and can’t enjoy pleasures or take advantage of opportunities | 40% of college students have greater than average stress, a third have severe depression, more than 40% have lack of hope, etc. | Santos therefore wanted to help using her knowledge in psychology (including positive psychology, where happy people are studied, and behavior change, to figure out how to change habits)… and made a course about it (Psychology and the good life) | 2 parts: positive psychology and the practice of the good life. To build this practice, rewiring habits became part of the syllabus (including gratitude, social connection, sleep, etc.) | No changes to syllabus upon submission, became popular | . Class Content: 10 insights . Happiness is controllable and can be improved (some is controlled by heritability, but not all) | Location of residence, salary, and other life circumstances matter less than we think (positive and negative events have a temporary impact on happiness). Therefore, removing the “bad stuff” isn’t the way to maximize happiness. | It is challenging (but possible) to become happier. This requires building daily habits that happy people have. The agile methodology, like the “Good Life” course, requires that habits be built. These habits will include having a daily standup meeting for planning and task delegation, maintaining issues for short-term tasks and the scrum board for organizing those tasks. This ensures that tasks are completed at a consistent pace in accordance with the agile methodology (Principle 8). GI Joe Fallacy: A cartoon claimed knowing a concept/skill is half the work, and that is false. The skill must also be put into practice, and that’s the majority of the work. | . | Intuitions about happiness can be inaccurate. The mind forecasts about what makes us happy (ex: salary, possessions), but increases in these things do not correlate with significant increases in happiness. | Happy people make time for social connections (spend more time with others). The agile framework would require working and with other people on computer projects. Communication in the agile framework requires in-person, face-to-face conversation (principle 6). This teamwork makes potential for social connections between effective group members, and this in turn may enhance happiness. | Helping others helps us (more than we expect) by making us happy. Helping others is integrated into the agile framework as when a student is having trouble with code, other group members can work with that student and teach how to fix the issue (this is also part of leadership skills) to help the group move along (Principle 4). This willingness to share help will ultimately lead to a better project and help with learning programming… along with the happiness along the way that comes with being helpful. | Make time for gratitude… daily. Happy people think/talk about the better people (rather than the annoying people). Writing down a list of good events daily increases happiness. It is also good to write a letter of gratitude and read it in-person to the person you are thanking. This reading of the letter connects the most with Agile Principle 6 (face-to-face conversation is the most effective mode of communication) | Healthy practice matter more than we think (exercise, sleep, etc.) Workouts has been shown to boost happiness for the day, while sleep deprivation significantly decreased happiness, some to depression levels. | Mindfulness (be in the present). Mindfulness is being aware of present sensory input (ex: how your feet feel when you stand, the room temperature, any sounds perceived, the color of your dish, etc.). More time spend in mindfulness is correlated with greater happiness, even compared to thinking about pleasant but non-present things. | Become wealthy… in terms of time. Time famine is being too busy… and time affluence is the opposite. People maximizing time affluence are happier. | Gratitude Note Experience . Letter to someone on campus . I wrote my letter to my teacher, Mr. Yeung. I was having a problem working with a group member, as I was helping him along every step of the way through setup. This left me with no time to do my own work in class. So I emailed him about the issue, and he told me to tell my partner three things: . Consult the blog/guide and read through the steps | If confused, ask me for help. Ask after 5 minutes of attempts to resolve the issue. | If I was too busy or didn’t know how to help, ask Mr. Yeung for help. | This allowed me to spend time during class working on my computer projects, and it also helped my partner gain some degree of independence during the learning process. I especially saw value in having group members consult a guide. This was very reassuring for me, especially since I tend to have anxiety during the early parts of a class (due to familiarization with class format and the like). So to thank him, I wrote him my letter. I already gave the letter to him at the time of writing, so I can’t copy the contents… but I can paraphrase from memory . In the letter, I thanked him for replying to the email, and told him all the good things that stemmed from this reply: having more time to work on the project, my partner being able to learn with a degree of independence (that is, not fully relying on my help), an understanding that I can refer confused group members to guides so I can continue to help in other ways, and a boost in my collaboration skills which will be important for college and the workforce. I also admitted that working in groups has been a challenge for me, and afterwards thanked him for helping me address it. . When I finished reading the letter to him, he told me he was glad to help with my issue. As far as I remember, the happiness I experienced was not a rush… but more deep inside, like a calm. This could have been my anxiety/stress dissipating. . During the next class, I thought of an application of his advice in a context outside of school. I know that the practice in groups I will get in this class will be invaluable in the future. . Letter to someone at home . I wrote my letter to my mother. I thanked her for helping me with an extracurricular activity last week, and I thanked her for helping me write an email about a concern with work in this class. She proceeded to give me all the credit for writing the email. I also thanked her for giving me good food and transporting me to school and other activities so that I can work with a clear mind, work in groups, and ask students and teachers for help with my work. I also thanked her for lending me her phone to ask my sister for help in AP Calculus BC, a tough course. I finally thanked her for her support in my efforts, especially any support that I haven’t given enough attention to. . My mother smiled and hugged me, and she asked why I was thanking her. When she asked if it was due to her help with improving my anxiety about this class (and other things), I nodded. . I felt it was nice that I made her happy by giving attention to everything she does to support me. Perhaps I can do this with other people as well. . NEW: Personal Goals (these are long-term) . Quit using grades as a measure of success, find some way to stop discrediting my own efforts | Get decent amounts of sleep while being able to do all my schoolwork | Be more open to talking with trusted individuals when seized with a major panic attack | Learn how to better work in groups | Remove the assumption that I can only trust myself to take responsibility | . Gratitude List . I thank my mother for patiently helping me improve for the past 17.75 years and helping me through all of my problems | I thank Mr. Yeung for helping me with advice in working with groups in this class | . Week 1 Python Vocab . Term Definition . Variable | An abstraction in a program that can hold one value/string at a time | . Command | A procedure executed by a computer/program | . Static text | Text within a program which does not change | . Dynamic text | Text within a program that does change, often due to inputs/outputs of various commands. Can be different depending on how a program is executed | . Output | The resulting text/values after a command is executed. This can be printed to a terminal using the print() command | . Input | A user answers a prompt with a string or other value. This is then often stored in a variable to be re-used later. | . Sequence of Code | Any code in which two or more lines are involved (ie, any code more complex than a single command) | . String | A sequence of characters/words, often enclosed in quotation marks | . Parameter | A variable which serves as input for a command/program | . function | Similar to a variable, but for commands. A function is defined with the def command (or other defining command), and afterwards the name of the function. The commands after the function name are then associated with the function throughout the entire script | . Procedural abstraction | Grouping a series of repeatedly-used commands | . library | a collection of code/functions that a program uses to optimize code execution. The program can refer to many parts of the library using importation commands to call certain functions/commands. | . String concatenation | When a string is printed to the terminal | . Python commands . Command Result . print(TEXT) | prints TEXT to the terminal | . def definition_name(commands here) | defines a function, which is a group of commands defined under a name | . definition_name(commands here) | execution of the function | . var_name = (input) | defines a variable based on input or as a predetermined value/string | . import | imports functions from a running environment | . if | if a specified condition is satisfied, the associated command(s) are run | . else | if the if condition is not satisfied, the command(s) associated with this are run instead | . list_name = [item1, item2, item3…] | Makes a list. Very useful if you are executing the same commands over and over and just want to modify an input. | . for | Does two things: cycles through a list, and executes a set of commands once for every item in that list. Each item in the list will be set equal to a variable (most commonly i) for input. | . iteration_name = iter(list_name) | Takes a list and turns it into an iteration (defining it as a variable). Required to run next. | . next(iteration) | Cycles to the next item in an iteration when executed… without re-executing any commands. | . Week 2 Python Terms Notes . Term Definition . Type | A form/variant of variable, being either a string (Ex: var = “john walked”), integer (ex: int = 18), float (ex: num = 100.0, notice the decimal), list (ex: cars = [SUV, sports car, sedan], notice square brackets), or a dictionary (includes curly brackets and several variables) | . Key | Another word for variable | . index | essentially the function of the common i variable in a for loop (cycles through entries in a list) | . Procedural Abstraction | Multiple HTML fragments &lt;html&gt;&lt;/html&gt; used, which are put together into a website | . Week 2 HTML Notes . Importing a Theme . Pictures say a thousand words. Therefore, I’ve integrated pictures to explain what’s going on with my site. . I attempted to integrate the midnight theme into my fastpages (at _config.yml). It looks like this: . . Upon uploading the modified _config.yml theme to my FastPage repository, I found out that there was no changes occurring. It was only some time later that I found that the CI task was consistently failing due to syntax errors in my _config.yml file. . . Every CI task was failing when I did the commit. The syntax error in _config.yml effectively made it impossible to update my website. It was then that I was told that I was not supposed to put midnight, but rather pages-themes/midnight@v0.2.0 in the remote theme configuration of _config.yml. Upon adding the fix, the CI tasks worked again. . . This fix was a success. The midnight theme was applied. I have some before/after images. . . . There is a very noteworthy change that comes with implementation of the midnight theme: the top bar of the website is removed. This top bar includes my most crucial pages (the search page, the tags page, this page, and my about me). Removal of easy access to the tags page is a special concern, since this serves as the backbone of organization for my website. As a result, the theme change is temporary. . Modifying dark mode . This one was interesting. I imported all the sample code, then had to modify it. The default code made the background of the website all-black, but something just wasn’t right. The top bar had the same color as the rest of the page. Therefore, I had two goals: . Make the color of the top bar different from the body | Define a second color to use. | Now of course the file in question was /sass/minima/dark-mode.scss. Now of course I had to define the second color first. I thought navy blue would fit, so I made a new color named navy-blue. Now the nice thing is that if you mouse-over the square of the color, a color picker opens up. That made changing the color very easy. . . Then I had to figure out how to make the top bar a different color. Since I wanted navy-blue to be my main color, I replaced all instances in the code where the background was dark-grey (the default color) with navy-blue. . . The last thing I had to do was figure out which parts of the page constituted the top bar. A little use of inspect element on my own page helped a lot. . . Using this, I found out that the site-header and site-nav parts of the site were in the top bar. So I set their background color to dark-grey. . . Tables in Liquid . I will not lie to you. This portion of the HTML hacks… with little sample code… was extremely difficult for me. It took me around 6 hours, searching through many websites… many reuploads of the page in question (which was index.html)… but onto the code… . . Now, what’s going on here? This is meant for the table on my front page index.html. . The first few lines are a bunch of HTML tags. The funny thing is, every time you make a tag (ex: &lt;table&gt;), you have to close it later (&lt;/table&gt;). So you got &lt;table&gt;, &lt;tr&gt; (which probably stands for “table row”), and &lt;th&gt; (likely “table heading,” appropriately named since the first row is bolded and has its own background color). Then we close everything. . This is where the liquid starts. It took forever for me to get this right… mostly because I tried many things. But so you don’t have to go through all that, I’ll just explain what’s in front of you. . In liquid, your commands must go in percents and curly braces. That’s how it was made. Now the reason why I’m not going to actually type out any percents and curly braces is because the website will immediately think I’m running actual code and return errors when I take my liberties. This would effectively make it impossible to update this page… so whenever you see a command assume they are in curly braces and percents. . assign = var_name makes a variable. But then you see assign Trimester = &quot;1; 1; 1&quot; | split: &#39;;&#39; Liquid has this funny thing about arrays, so in order to make one you have to put the whole thing in quotes, with each entry separated by a certain character… then you have to pipe it to a split command to tell liquid what character separates each entry (in this case, it was semicolon). I defined the other lists in a similar manner.. . Next is the for loop, which as a reminder executes all associated commands for each iteration. In this case, we get for i in (0..2). Conceptually, it’s not much different than the python for loops. It cycles through three values (0, 1, and 2), and executes the commands for each. It’s mostly the syntax that was a bother. You have to put the numbers in parenthesis, otherwise it just doesn’t work. You also separate the numbers with two periods. . We’ll then take a look at one of the associated commands. . &lt;tr&gt; &lt;td&gt;&lt;/td&gt; . This simply says that for each iteration (or cycle, the word I’ve used in my other posts so far), the item in the array associated with the value of the index variable will be used. Remember, the first item is associated with 0, the second item with 1, etc… in the Trimester list, the items are all 1. The other commands are similar to this one, except for the Week and Description lists instead. . Unlike python, we have to tell liquid where the for loop is going to end. Because apparently the tabbing scheme doesn’t cut it. That’s what endfor is for. . I guess there’s one last thing… I need to tell you where I got all this info from. . Assigning a variable (includes split command) | For loop syntax | . Yes, the second one is someone else’s submission. I personally think looking at someone else’s code is a bit of a grey area in terms of academic honesty, and straight up copying it is prohibited. But then again the syntax is a bit rigid, so there’s not an easy way to make code without the syntax matching up. So to make myself feel a bit better about using someone’s submission as a reference, you can see there are a few differences (this student referenced some variables placed in _config.yml… which I don’t see as a suitable place to store variables, so I placed them in the related code instead). Gotta give credit where credit is due. Because honestly, this is all the example code I got. Mr. Yeung told me the more important part of the class is understanding how the code works, so if you think the explanation above was fair, then I guess I might be doing this right. . Week 4 Collaboration Notes . Video 1: Why collaborate? . Facebook . Facebook Visit: a coworker’s son got the instructor in, and there are many meeting rooms and space to get together and collaborate. . Facebook owns social media entities, which requires collaboration . Main Point: Collaboration –&gt; computing innovation reflecting diversity of talents of designers . Includes program; can be physical (self-driving car), non-physical (computer programs) or concept | . Video Games . Super Mario Brothers (2 and 3) . SMB2 was a reskin of SMB. . Kensuke Tanabe made a vertical game with a collaborative element to the level design. Shigeru Miyamoto wanted horizontal game. They had a conflict. . SMB 2 had differing versions, which was either vertical or horizontal (but not both simultaneously) . | SMB 3 had both vertical and horizontal designs . | . Main point: Collaboration with diverse perspectives avoids bias . Practice . What are the benefits of collaborating with peers? . Answer: Effective collaboration produces computing innovations reflecting diversity of talents/perspectives of the designers . Key takeaways . Collaboration skills . Communication | Building a consensus | Negotiating | Resolving Conflicts | . Video 2: How to collaborate . Pair Programming . One (the driver) writes the program, the other (the observer) reviews each line of code as it’s typed | The observer is not a back-seat programmer who complains over every minor error of the driver. The observer just provides a different perspective | It is recommended for people to switch roles | . Think-Pair-Share . Student attempts problem individually | Student shares ideas with a partner | Students share results with class (or with a larger group) | Analogy: Play charades . Interpreting other player’s communications can be difficult, it may eventually make sense | Working independently is similar to playing charades | . Leaving Comments in the Code . Allows to communicate to other people what the code does | Makes sure you don’t forget what your code does | Allows to cite code segments from other sources | Cite media (audio/video) used from other sources | Mark which partner did what code | Clarify how the code works | If comments are not possible in the programming language, use a PDF or word editor . Tools for Collaboration . repl.it (multiplayer) | GitHub (repositories) | Shared documents/folders (Google Drive, media, etc.) | Asking friends/family/teachers to test programs, get feedback | . DISCLAIMER: Only collaborate with a partner for the Create Performance Task (not anyone else) . Key Takeaways . Consulting with other people is important for diverse perspectives . Prevents self-absorption into programming from getting in the way of seeing issues with programs | . Use online tools . Proof I did the MCQ . . Week 5 JavaScript Notes . there are “number” instead of integer . There are still functions and such, though they are defined with function instead . JSON (JavaScript Object Notation) allows for transmission of data (similar to Python lists and dictionaries) between files. A function can be used to put input into the data. The JSON makes the data a string . function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } . Can make an array using a variable like in Python, though making an array is significantly easier: . var var_name = [ new OBJECT(&quot;Param1&quot;, &quot;Param2&quot;, &quot;Param3&quot;, &quot;2022&quot;) ] . Output may not always be need, so use _toHTML. Use . var style = ( :display:inline-block;&quot; + &quot;border: 2 px solid grey;&quot; + ) . In for loops, the iteration variable must be defined with var . for (var row of compsci.classroom) { associated commands } . Week 5 Program Purpose/Function Notes . Video 1: Purpose of Computing Innovations . Purpose of computing innovations is for problem solving/creative expression | . Computing Innovations Ex: apps (games, social media), devices (computers, smart phones), systems (E-mail, cloud services) . Guiding Questions . Why do computing innovations exist | What problems (not negative, just an issue) are solved | What new things does the innovation allow us to do? | . Practice: Social media . Social media exists to allow for communication between close and distant individuals, both in terms of geography and in terms of relationships. This also provides easy access to a history of social activities | Social media addresses the issue of the speed and distance of communication between individuals. Specifically, communication is faster and can happen from longer geographical distance. | Social media allows for a more public form of communication where information spreads quickly. It also allows for approval/disapproval of opinions in a public space. | . Practice: E-commerce . E-commerce exists to allow for purchase of items which are not available over a short distance (specifically in a nearby retail store). This prevents the purchaser from having to travel long distances to pick up an item, which in term saves time and money. | This also allows ease of finding the best price for a certain item | E-commerce also helps with organizing products into a website, allowing customers to purchase products more quickly than in a physical store. | . Practice: Digital Assistant Device . Allows for easy web searches using voice rather than having to open up a web browser and type in a search query | Allows for easy automation of certain tasks at home without using hands; allows for multitasking, especially in situations like driving (ex: calling people while driving) | . Video 2: Input/Output . events provide input to a program, and events can be triggered by things like key presses | Input and output in variety of forms (text, audio, images, etc.) | . Programs accept many forms of input . Tactile (touch using keyboard, touchpads, mice) | audio (voice-controlled for digital assistant devices) | Visual | text (including numerical values) | Types of input devices accept . Smart phones have touch screens, buttons, voice-activated siri assistant, QR code scan/facial recognition, text | Laptop: mouse, trackpad, keyboards | Gaming Console: all the buttons, remote control | . How do programs receive input: . programs in an event-driven environment | events triggered by actions, which sends input | events = mouse clicks, screen taps, force touch, swipes, button clicks/press, keyboard entries, audio (voice-controlled smart device) | . What input accomplishes . Usually affects output (though if the device is powered off, input does nothing other than the power-on button) | Device outputs: visual, audio, tactile, text | ex: smartphone: visual (screen changes), audio (the sounds of the smart speaker), tactile (device vibrates); text (displayed on the screen) | ex: laptop: visual (what’s on the screen); audio (all the sounds); text (displayed on the screen) | ex: gaming console: remote vibrates on certain in-game events | . How program knows what to do by events . Actions trigger events (initiated by user or a program) | Program jumps to code associated with event, executes it –&gt; output/events triggered | . Program code not necessarily executed in order, they are executed as called . Video 3: Program/Code Function . Program = collection of program statements performing a specific task when executed | Code segment = collection of program statements, part of program | Program needs to collect variety of input | Behavior = how program functions during execution | Can be described broadly or by what program does and how it does it | . Programs . Program/software = collection of statements | Statement = 1 command | Group of statements = code segment | Code segments executed according to rules of programing language | Can be seen in text or with blocky | . Example code . min &lt;-- aList[1] FOR EACH item IN aList { IF (item &lt; min) { min &lt;-- item } } DISPLAY (&quot;The minimum number is in the list is&quot;) DISPLAY (min) . Arrow is an assignment, value of aList[1] assigned to min list groups together data . FOR EACH item IN aList: looks through each number, repeat associated commands . If the item is less than the minimum, then the item is the new minimum. After done for all elements, print the text . This program finds the minimum value in a list . Needs to work for a variety of lists | Out-of-order numbers, | negative numbers, | larger numbers (especially a problem with 32-bit integer limit), | decimals (some languages separate decimals from integers) | Can be put in larger program | . Describing code segments . Describe what it does so it could be re-used in a larger program | Include how it does what it does | Explain how it functions | Allows people to make it better | . Week 5 Agile Methodology Notes . Vocabulary: . Term Definition . Standup Meeting | Weekly planning meeting where the scrum team plans and assigns tasks, sets pacing, and sets priorities | . Scrum Master | Essentially a team manager. Responsible for managing the Scrum Board and assigning tasks | . Scrum Board | An organization table in GitHub Projects containing a list of tasks to be completed, common to-dos, and completed tasks. Helps with team organization | . DevOps | The main student responsible for deploying finished code to AWS, making sure that the team doesn’t push to GitHub at the same time, etc. | . Frontend Developer | Student that works with applications that users see; for example, the FastPages server or the group Flask server | . Backend Developer | Student working with code and server-side functions (including Python) which are not visible in a web browser | . Sprint | The period of time a team plans, completes, and deploys a project. Usually 2 weeks. | . 7 Important Skills . Creativity: Problem-Solving skills (including improvising, using skills outside the usual curriculum). Making connections/inferences | Critical thinking: thinking of ways to improve projects or thinking of potential pitfalls ahead of time. Aggressive problem-solving methodology | Communication: Addressing people with appropriate levels of vocabulary and taking feedback without offense | Leadership: Leaders do task delegation, teach group members about important concepts, and are always the ones to resolve conflict. | Teamwork: The primary component is trust in the other individuals. Also includes completing tasks while meeting checkpoints, all while exercising time management skills | Research: Does include searching the Internet, but also asking for help from team members or teachers | Technical understanding: Includes being knowledgeable about the software, and also being willing to learn about coding and troubleshooting. | Week 6 Program Design/Development Notes . Video 1 . Use a development process | Design program and user interface | . Program Development . Starts with an idea about what the purpose is | Developers follow steps in a plan | Steps can be changed based on what happens (good/bad) | Ex: AI (personal assistant): developers tried to figure out what they could do | Once project succeeded, newer projects tried to customize AI to users | Developers investigate the purpose/requirements of the program (what should be accomplished?) | Come up with constraints (what should not be done?) | Ex: personal assistant has no screen or button, only use voice commands | Ex: deadlines (time) | What does the user care about? | Investigate using surveys, interviews, public beta/released prototype, observations, etc. | Developers design program through | Brainstorming (review investigation results) | Storyboard what the program looks like, what the user would do | Plan user experience (how user interacts, output, etc.) | Make user interface | Make modules (program components developed separately, then integrated) | Have testing strategy | Developers then decide on requirements | Program behavior | Potential user interactions | Requirements outlined on specifications | Then prototyping, which is incremental to refine modules (small parts of the program) | Then lots of testing (test every step, at small and large scope) | Refine through testing, reflection, and feedback from other people | . Video 2 . Programs written by multiple groups; groups acknowledge code from other sources or developed collaboratively | Acknowledgements can be in the documentation . | Program is rarely individual, usually developed in teams | Individuals/teams work on different components | Each member deserves credit for the work in the documentation (with the contributions of each) (ex: asking a friend for help) | Also use comments for credit of code. If the language doesn’t allow comments, there needs to be a workaround | Allows the developers to know which people can fix what parts of the program | Also useful when users find bugs in the published version of the program | Developers also use code written by others (ex: making a second program re-using assets from a previous program) | The developers of that previous project should be given credit (similar to using a concrete detail in an essay) | Code is the intellectual property of the author | Documentation should include author’s name and source of recycled code (similar to bibliography) | . ##### Practice . Use of code segments from another person’s program require’s citing the author and source program. | Use of original code segments do not require a citation of the author | Use of an algorithm written by someone else requires citing the author and source program. | Use of code segments written in collaboration with others requires all collaborators to be cited. | . Video 3: Documentation . Documentation is description of code segment/program | Comments = in-program documentations | Document throughout development to help maintain correct programs . | Program Documentation purpose: | Describe the program | List specifications | Describe functions or code segments | Events with corresponding outputs | Program development, how other programs interact with that program | Cite authors | Documentation throughout development process | Beginning: specifications/purpose | During development: Tracking progress | After development: Explain development process, cite authors | Improves efficiency, improve ability to test/refine program, responding to bugs | . How to document while programs . Some languages offer commenting (developers write text that’s not executed) | Comments read by developer | If there’s no commenting, maybe copy code into txt document | . Examples . Python | . # this is a comment . Java | . // this is a comment /* this is also a comment */ /** this is documentation comment */ . Javascript, C/C++, Swift similar to Java . | XML/HTML; can be multi-line . | . &lt;!--This is a comment--&gt; . Applescript/Pascal | . (* THIS IS A COMMENT *) . Block-based languages (comments can be expanded/collapsed) | Scratch | MIT AppInventor | . Week 7 Troubleshooting Video Notes . Video 1: Identifying errors . 4 types . Logic error: mistake in algorithm causing unexpected behavior | Syntax error: rules of language not followed | Run-Time: Occurs during execution, special to each program languages | Overflow: Comptuer handles a number outside defined range of values | Errors are common enough to be part of the process. Programmers identify the type of errors. . Logic error ex: code segment intended to display letter grade corresponding to percentage | Grade represents percentage | A series of an if statements (ex: if grade &gt; 89; if grade &gt; 79) | Results in outputs of A, B, C, D for an A grade | . grade ← INPUT(&quot;Enter a grade&quot;) IF (grade &gt; 89) { DISPLAY (&quot;A&quot;)} IF (grade &gt; 79) { DISPLAY (&quot;B&quot;)} IF (grade &gt; 69) { DISPLAY (&quot;C&quot;)} IF (grade &gt; 59) { DISPLAY (&quot;D&quot;)} ELSE { DISPLAY (&quot;F&quot;)} . Syntax error: due to typos breaking rules of language | Program fails to run | Ex: forgetting colon/semicolon, parenthesis, curly braces, indents, quotes, defining variables | . grade ← INPUT(&quot;Enter a grade&quot;) IF (grade &gt; 89 { # needs closed parenthesis after 89 DISPLAY (&quot;A&quot;)} IF (grade &gt; 79) { DISPLAY (&quot;B&quot;) #needs closed curly brace IF (grade &gt; 69) { DISPLAY (&quot;C)} #needs close quotes after C IF (grade &gt; 59) { DISPLAY (&quot;D&quot;)} ELSE #needs open curly brace DISPLAY (&quot;F&quot;)} . Run-time error: program fails while running (crashes); “bugs” | Program runs initially but doesn’t finish processes | May result from division by zero or inappropriate data types (ex: number entered where there should be a word) | Inputs which are not numerical (strings) or using the wrong data type (integer, decimal, etc.) could result in run-time error below | . grade ← INPUT(&quot;Enter a grade&quot;) IF (grade &gt; 89) { DISPLAY (&quot;A&quot;)} IF (grade &gt; 79) { DISPLAY (&quot;B&quot;)} IF (grade &gt; 69) { DISPLAY (&quot;C&quot;)} IF (grade &gt; 59) { DISPLAY (&quot;D&quot;)} ELSE { DISPLAY (&quot;F&quot;)} . Overflow error: program has to perform calculation outside of defined range | Memory constraints make some numbers too large for programs to calculate | Ex: 4 digit calculator, calculator can display 9999. If 100*100 is calculated, that is 10000, but there’s no display room, so there’s an overflow error | . Video 2: Correcting Errors . Effective ways to correct errors: . Test Cases | Hand Tracing | Visualizations | Debuggers | Adding outputs | . Correcting syntax errors: Most Integrated Development Environments display info about syntax error (the line with the syntax error) . ex: bad input on line 2 in main.py | . Correcting logic errors (program runs but not as intended) . Use test cases | Example code below; use test cases like numbers 95, 82, 76, 61, 58… etc. | Use border cases (ex: 89.5 vs 89.4) | . grade ← INPUT(&quot;Enter a grade&quot;) IF (grade &gt; 89) { DISPLAY (&quot;A&quot;)} IF (grade &gt; 79) { DISPLAY (&quot;B&quot;)} IF (grade &gt; 69) { DISPLAY (&quot;C&quot;)} IF (grade &gt; 59) { DISPLAY (&quot;D&quot;)} ELSE { DISPLAY (&quot;F&quot;)} . Corrected code segment below | . grade ← INPUT(&quot;Enter a grade&quot;) IF (grade ≥ 89.5) { DISPLAY (&quot;A&quot;)} ELSE { IF (grade ≥ 79.5) { DISPLAY (&quot;B&quot;)} ELSE { IF (grade ≥ 69.5) { DISPLAY (&quot;C&quot;)} ELSE { IF (grade ≥ 59.5) { DISPLAY (&quot;D&quot;)} ELSE { DISPLAY (&quot;F&quot;)} } } } . Hand Tracing (for iteration/loops) | Write out values of variables in loop as it iterates | Useful for smaller segments; larger segments need debuggers | . list ← [2, -3, 5, 1, 10, 8] min ← list[1] index ← 1 REPEAT (LENGTH(list) - 1) TIMES{ IF (list[index] &lt; list[index + 1]) { min ← list[index] } index ← index + 1 } DISPLAY(min) . Table copied from video . min Index list[index] list[index + 1] . 2 | 1 | 2 | -3 | . 2 | 2 | -3 | 5 | . -3 | 3 | 5 | 1 | . -3 | 4 | 1 | 10 | . 1 | 5 | 10 | 8 | . 1 |   |   |   | . Algorithm displays list time number was less than next number in list | Test case [1, 4, 0, 3, 2] would not have found the issue | Correction: min &lt; list[index] rather than list[index] &lt; list[index + 1] | Repeat LENGTH(list) times . | Extra output statements | Removed once error corrected | Similar to hand tracing, though computer does the work . | IDEs can also use visualizations (graphs, images, colors; determine if program works) | Debuggers use program software, allowing the program to be tested during execution | . Video 3: Identifying inputs and expected outputs . Testing involves using inputs and expecting an output. Inputs may be used at the extremes, and deviations from expectations are used to improve code . | Planning for testing begin at the beginning of the process | Think about program specifications, know how program is working properly . | Specification list behaviors/events and outputs of the program | Inputs to be defined | . Example . list ← ? min ← list[1] index ← 1 REPEAT (LENGTH(list) - 1) TIMES { IF (list[index] &lt; list[index + 1]) { min ← list[index] } index ← index + 1 } DISPLAY(min) . The following lists will show the algorithm doesn’t work as intended: . [1, 2, 3, 4, 5] | . temp ← INPUT(&quot;Enter the temperature&quot;) IF (temp &lt; 32) { DISPLAY (&quot;Watch out for snow!&quot;)} ELSE { IF (temp &gt; 90) { DISPLAY (&quot;Turn on AC!&quot;)} ELSE { DISPLAY (&quot;Enjoy the weather.&quot;)} } . This should output “Watch out for snow!” for 32 degrees or less | Therefore, the algorithm does not work as intended for 32 degrees | . Influence of errors on program development . Once inputs and outputs are planned, there’s testing | Results used to improve code | Programmers and users test | Then programs released, bugs found, updates released | . MyAP MCQ 1.4 . This will be published the day of review to prevent compromise of integrity. If this is published beforehand, this is unintentional. . 1) score and penalty are positive integers. penalty is supposed to subtract from score, but score can’t be negative. . IF(score - penalty &lt; 0) { score ← score - penalty } ELSE { score ← 0 } . What change can be made so the code segment works? . Switch lines 3 and 7 | . 2) The procedure needs to return true if a list has only positive numbers, or else it returns false. . PROCEDURE allPositive(mylist) { index ← 1 len ← LENGTH(myList) REPEAT len TIMES { IF(myList[index] &gt; 0) { RETURN(true) } index ← index + 1 } RETURN(false) } . For which contents of myList doesthe procedure not return the result as intended? . RETURN will exit the procedure with the output in the parenthesis | Therefore, the first time a list encounters a positive number it will exit the procedure with a code of true, regardless of if any other numbers are negative. If no positive numbers are encountered, false is outputted. | Therefore, the list [-1, 0, 1] will show the procedure does not work as intended | . 3) Homework assignment has 10 questions . Number answers correct Grade . At least 9 | Check Plus | . 7-8 | Check | . Less than 7 | Check minus | . numCorrect is the number of correct answers. The code is supposed to display the grade . Which values of numCorrect makes the code fail to display intended grade? . Code checks if the grade is greater than 7 | If it is, it checks if it is at least 9. If so, then check plus is displayed. This works as intended | If not, check minus is displayed. According to this code, 8 will display check minus (it should be check) | Any grades of 7 or less get check. Therefore, grades of 0-6 get check even though they should get check minus . | Available MCQ answers: 8, 6 | . Week 8 Topic 4.1: The Internet . Video 1: How computing devices interact . Computers were at first room-sized (still room-sized around 1975) | Computers start decreasing in size (ex: PC, routers, sensors) | Collaboration was needed (using floppy disks was too hard) | Computers communicate through electrons (in binary) | Packets are used to communicate. Packets are small amounts of information, including source and destination | Computer systems (computers work together for purpose) joined in networks | Packet switching: A packet is spliced into fragment, which are sent along a network path | Routers help with packet switching and guide packets along their paths to destinations | Bandwidth: Maximum data that can be sent in fixed amount of time through a path/network (measured in bits/second) | . Vocabulary . Term Definition . Path | sequence of directly connected computing devices beginning at sender and ending at receiver | . Route | Process of finding a path from sender to receiver | . Computer System | Group of computing devices/programs working towards common purpose | . Computer Device | A physical artifact that can run a program (ex: computers, tablets, servers, routers, smart sensors) | . Bandwidth | Maximum amount of data that can be sent in a fixed amount of time | . Computer Network | Group of interconnected computing devices capable of sending/receiving data | . Video 2: Internet VS World Wide Web, Protocols, etc. . Packet Review . Packet = small amount of data sent over network (with source and destination information) | Protocol = set of rules specifying system behaviors | . Protocols written by Internet Engineering Task Force (IETF) . Made OSI (Open Systems Interconnect) model, connects through 7 layers -TCP (Transmission Control Protocol) - TCP/IP Model | . TCP/IP Model . Network Access Layer (Data link, Fiber, MAC, Ethernet cable, Network Internet Card, etc.) | Related to hardware | Each piece of hardware has a unique Media Access Control (MAC) address | Packets hop between NICs | Internet Layer (IP) | Packets have source and destination IPs, metadata, and MAC Addresses | Packets go through sequence of routers | Multiple paths are possible | Internet is scalable, can change size to meet demands | IP address required | IPv4 address has 4 octets, each 8 bits long | Has network bits and device bits; the 32 bits are shared between these two parts | Transport Layer (TCP/UDP) | TCP is stricter, does 3-way handshake | Think about “certified mail” - you learn when/if the recipient received the mail | UDP less strict, there’s no verification if the packet reached the destination | TCP only uses unicasts, UDP uses unicasts, multicasts, and broadcasts | Unicasts = 1 destination | Multicasts = multiple destinations (range of IP addresses) | Broadcasts = all computers in a LAN are destinations | Application Layer (HTTP, DNS) | DNS (Domain Name Service) is database mapping IP addresses to domain names (with languages) | uses .edu, .com, .org | World Wide Web is not the Internet, but rather linked datapages | Use HTTP (port 80) or HTTPS (port 443) to access web pages | . Scalability . Lowest layer = Local Area Network (LAN; home level or school level) | Multiple LANs make an Intranet; they communicate using Autonomous Systems (AS) controlled by Internet providers | The Internet is made up of Autonomous Systems | . The Process . Computer joins a network, gets IP address from DHCP (Dynamic Host Configuration Protocol) | URL (ex: ibm.com) is converted to IP using DNS | Packets sent to the router, which can send packets to other routers or web server | Use TCP or UDP | . Quiz!!! . Open standards and protocols do enable manufacturers/developers to build hardware/software that communicates with the Internet | IETF is a task force, but it doesn’t enforce laws to keep manufacturers out of the Internet. It writes protocols. | Routes are not necessarily determined in advance, so they can be flexible. | A protocol is an agreed-upon set of rules specifying system behaviors. | UDP does not guarantee transfers, though it is faster than TCP. | The World Wide Web is not the Internet. | HTTP is a protocol used by the World Wide Web. | . 3.14-3.15 Notes . 3.14: Libraries . Libraries are pre-existing code used to make programs | Procedures (or functions) are examples of re-used code | Procedures can be very long to read, so documentation is needed | Allows for knowledge about what procedure does and what parameters | Ex: calcAverage takes a list of integer values (representing grades), outputs the average | File containing such procedures (functions) are libraries | API (application program interface) gives specifications for how procedures in a library can be used. API is the documentation. | Common for large tech companies | Library example: Exam reference sheet | To calculate grade point average, a procedure called calcQuotient which takes two positive integers and returns their quotient is useful. | . Topic 3.15 Video 1: Random Values . Pseudocode: RANDOM(a, b) | Returns a random integer in [a, b] | Ex: RANDOM(1, 6) will return 1, 2, 3, 4, 5, 6 | Is discrete (gives one number at a time) | . Example 1: What is the possible range of results? . answ1 ← RANDOM(0, 2) answ2 ← RANDOM(1, 5) answ3 ← answ1 + answ2 . answ1 has minimum value 0; answ2 has minimum value of 1. Therefore the bottom of the range will be 1. . answ2 has maximum value 2; answ2 has maximum value of 5. Therefore the top of the range will be 5 + 2 = 7. . Therefore, the range of results is all integers in [1, 7] .",
          "url": "https://leonard514.github.io/FastPage/_pages/02_notes.html",
          "relUrl": "/_pages/02_notes.html",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "About Me",
          "content": "Hi! I’m Leonard Wright, and I am a student at Del Norte High School. This website is currently being maintained for AP Computer Science Principles. I do have some experience securing computers, and I guess this class will be more about learning to code code code!!! I hear we’ll be working in groups a lot in this class. I hope I can also learn about working with others in this class (I had a hard time with this in 11th grade, though recently I’ve learned a few things so hopefully things get better). I’ll need collaboration skills in college and the workforce anyways, so best to start practicing now. . Anyways other than that I guess I can mention I’m in Ms. Lanzi’s BC class (wish me luck). She does a good job with integrating group work into the course structure. That’s a plus since I could learn collaboration skills in that class as well as here. . I don’t know what else to say, I guess I’ll add more stuff here later .",
          "url": "https://leonard514.github.io/FastPage/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://leonard514.github.io/FastPage/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}